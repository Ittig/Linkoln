/*******************************************************************************
 * Copyright (c) 2016 ITTIG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU GPL license v3.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl-3.0.en.html
 *
 * Contributors:
 *     ITTIG
 *******************************************************************************/
/* The following code was generated by JFlex 1.5.1 */

package it.cnr.ittig.linkoln.scanner;

import java.util.regex.Matcher;
import java.util.regex.Pattern;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.5.1
 * from the specification file <tt>Numeri.jflex</tt>
 */
public class Numeri {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int AH = 2;
  public static final int LK = 4;
  public static final int sListaSenzaAnno = 6;
  public static final int sListaConAnno = 8;
  public static final int sMixed = 10;
  public static final int sMixedAnno = 12;
  public static final int sMixedEu = 14;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7, 7
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\7\1\2\1\35\1\36\1\1\22\0\1\7\6\0\1\3"+
    "\1\45\1\46\2\0\1\10\1\4\1\34\1\30\1\44\1\37\1\43"+
    "\3\6\2\41\1\40\1\42\2\0\1\26\1\0\1\27\2\0\1\14"+
    "\1\5\1\21\1\17\1\16\1\5\1\5\1\5\1\12\1\5\1\32"+
    "\1\31\1\33\1\20\1\15\1\23\1\5\1\24\1\5\1\25\1\22"+
    "\2\5\1\5\2\5\1\0\1\0\2\0\1\4\1\3\1\14\1\5"+
    "\1\21\1\17\1\16\1\5\1\5\1\5\1\12\2\5\1\13\1\33"+
    "\1\20\1\15\1\23\1\5\1\24\1\5\1\25\1\22\2\5\1\5"+
    "\2\5\12\0\1\35\56\0\1\3\13\0\2\0\6\0\2\0\2\0"+
    "\2\0\4\0\2\0\5\0\2\0\5\0\2\0\6\0\2\0\2\0"+
    "\2\0\4\0\2\0\5\0\2\0\65\0\2\11\115\0\1\0\u1e93\0"+
    "\1\4\1\4\4\0\1\3\16\0\1\35\1\35\udfd6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\10\0\10\1\2\2\3\1\2\3\1\1\1\2\1\1"+
    "\3\4\1\5\3\6\1\5\5\7\6\10\5\11\43\0"+
    "\1\5\1\12\77\0\2\13\11\0\1\14\1\15\25\0"+
    "\2\16\13\0\1\17\2\0\1\17\12\0\3\20\1\0"+
    "\3\20\6\0\2\17\11\0\1\13\1\17\10\0\1\14"+
    "\1\15\1\0\1\21\1\22\1\0\1\22\5\0\1\22"+
    "\1\0\1\22\4\23\27\0\4\24\1\17\3\25\6\0"+
    "\1\20\2\0\3\20\2\0\1\20\2\0\5\20\6\0"+
    "\2\17\7\0\1\13\2\0\1\17\2\0\4\24\11\0"+
    "\4\26\14\0\1\16\1\27\4\0\3\27\14\0\1\25"+
    "\6\0\1\24\1\17\5\0\1\24\1\0\3\24\2\0"+
    "\1\20\5\0\1\20\1\0\1\20\7\0\1\13\1\0"+
    "\1\17\1\0\1\17\3\0\4\30\1\0\1\13\3\30"+
    "\1\17\1\30\3\0\1\31\30\0\4\32\4\33\7\0"+
    "\4\34\3\24\7\35\1\25\6\0\4\24\3\31\3\0"+
    "\1\17\3\0\1\13\2\0\2\17\1\0\1\17\7\0"+
    "\1\13\4\34\1\17\1\0\1\31\7\0\2\13\4\0"+
    "\4\36\2\0\1\23\3\0\1\33\4\32\1\0\2\37"+
    "\1\35\4\34\3\35\1\25\1\0\1\31\1\13\3\0"+
    "\1\24\1\0\3\24\6\0\1\30\1\13\1\0\2\17"+
    "\1\0\1\17\1\13\1\0\3\13\1\0\1\13\2\0"+
    "\1\13\1\0\1\17\7\0\1\13\3\0\1\26\13\0"+
    "\1\35\2\0\1\35\4\0\3\30\1\31\4\0\2\35"+
    "\1\13\1\0\1\17\1\0\1\17\1\0\2\17\1\0"+
    "\1\13\1\0\1\17\1\0\1\17\1\0\1\31\2\0"+
    "\1\13\12\0\1\35\4\0\1\30\2\40\1\31\1\0"+
    "\3\35\1\0\1\13\1\17\1\0\1\17\1\0\2\17"+
    "\1\0\1\13\1\17\3\0\1\13\2\0\1\36\3\0"+
    "\2\37\1\35\1\0\2\35\1\30\2\0\1\30\2\0"+
    "\1\13\1\0\1\13\2\17\1\0\1\17\1\0\1\13"+
    "\1\17\4\0\1\13\6\0\1\35\2\0\1\30\4\0"+
    "\1\13\2\17\1\0\1\17\1\0\1\17\1\13\1\17"+
    "\2\0\1\13\1\0\2\13\3\0\1\30\1\0\2\40"+
    "\1\0\1\13\4\17\1\13\1\0\1\13\1\0\2\13"+
    "\2\0\1\30\2\0\1\13\2\17\1\13\1\0\1\13"+
    "\3\0\1\13\1\17\1\13\1\0\1\13\1\0\1\17"+
    "\1\13\1\0\1\13\6\0\2\13\2\0\3\13\4\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[840];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\47\0\116\0\165\0\234\0\303\0\352\0\u0111"+
    "\0\u0138\0\u015f\0\u0186\0\u01ad\0\u01d4\0\u01fb\0\u0222\0\u0249"+
    "\0\u0138\0\u0186\0\u0270\0\u0297\0\u02be\0\u02e5\0\u02be\0\u030c"+
    "\0\u02be\0\u0333\0\u035a\0\u0381\0\u02be\0\u03a8\0\u03cf\0\u03f6"+
    "\0\u02be\0\u041d\0\u02be\0\u0444\0\u046b\0\u0492\0\u04b9\0\u02be"+
    "\0\u04e0\0\u0507\0\u052e\0\u0555\0\u057c\0\u02be\0\u05a3\0\u05ca"+
    "\0\u05f1\0\u0618\0\u063f\0\u0666\0\u068d\0\u06b4\0\u06db\0\u0702"+
    "\0\u0729\0\u0750\0\u0777\0\u079e\0\u07c5\0\u07ec\0\u0813\0\u083a"+
    "\0\u0861\0\u01ad\0\u0888\0\u08af\0\u08d6\0\u08fd\0\u0924\0\u094b"+
    "\0\u0972\0\u0999\0\u09c0\0\u09e7\0\u0a0e\0\u0a35\0\u0a5c\0\u030c"+
    "\0\u0a83\0\u0333\0\u0aaa\0\u0ad1\0\u035a\0\u0af8\0\u0b1f\0\u0b46"+
    "\0\u03cf\0\u0b6d\0\u0b94\0\u0bbb\0\u0be2\0\u0444\0\u0c09\0\u0c30"+
    "\0\u0c57\0\u046b\0\u0c7e\0\u0ca5\0\u0492\0\u0ccc\0\u0cf3\0\u0d1a"+
    "\0\u0d41\0\u0507\0\u0d68\0\u0d8f\0\u0db6\0\u0ddd\0\u0e04\0\u0e2b"+
    "\0\u05ca\0\u0e52\0\u0e79\0\u0ea0\0\u0ec7\0\u0eee\0\u0f15\0\u0f3c"+
    "\0\u0f63\0\u0f8a\0\u0fb1\0\u0fd8\0\u0fff\0\u1026\0\u104d\0\u1074"+
    "\0\u109b\0\u10c2\0\u10e9\0\u1110\0\u1137\0\u115e\0\u1185\0\u11ac"+
    "\0\u01fb\0\u11d3\0\u11fa\0\u1221\0\u1248\0\u126f\0\u1296\0\u12bd"+
    "\0\u12e4\0\u130b\0\u1332\0\u1359\0\u1380\0\u13a7\0\u13ce\0\u13f5"+
    "\0\u141c\0\u1443\0\u146a\0\u1491\0\u14b8\0\u14df\0\u1506\0\u152d"+
    "\0\u1554\0\u157b\0\u0666\0\u15a2\0\u15c9\0\u15f0\0\u1617\0\u163e"+
    "\0\u1665\0\u168c\0\u16b3\0\u16da\0\u1701\0\u1728\0\u174f\0\u1776"+
    "\0\u179d\0\u17c4\0\u17eb\0\u1812\0\u1839\0\u1860\0\u1887\0\u18ae"+
    "\0\u18d5\0\u18fc\0\u1923\0\u194a\0\u1971\0\u1998\0\u19bf\0\u19e6"+
    "\0\u1a0d\0\u1a34\0\u052e\0\u1a5b\0\u1a82\0\u1aa9\0\u1ad0\0\u1af7"+
    "\0\u1b1e\0\u1b45\0\u1b6c\0\u1b93\0\u1bba\0\u1be1\0\u1c08\0\u1c2f"+
    "\0\u1c56\0\u1c7d\0\u1ca4\0\u1ccb\0\u1cf2\0\u1d19\0\u1d40\0\u1d67"+
    "\0\u1d8e\0\u1db5\0\u1ddc\0\u1e03\0\u1e2a\0\u1e51\0\u1e78\0\u1e9f"+
    "\0\u1ec6\0\u1eed\0\u1f14\0\u1f3b\0\u1f62\0\u1f89\0\u1fb0\0\u1fd7"+
    "\0\u1ffe\0\u2025\0\u204c\0\u2073\0\u209a\0\u20c1\0\u20e8\0\u210f"+
    "\0\u2136\0\u215d\0\u2184\0\u21ab\0\u21d2\0\u152d\0\u02be\0\u21f9"+
    "\0\u02be\0\u2220\0\u2247\0\u1617\0\u226e\0\u2295\0\u22bc\0\u22e3"+
    "\0\u230a\0\u2331\0\u2358\0\u237f\0\u23a6\0\u23cd\0\u23f4\0\u241b"+
    "\0\u2442\0\u2469\0\u2490\0\u24b7\0\u24de\0\u2505\0\u252c\0\u2553"+
    "\0\u257a\0\u25a1\0\u25c8\0\u25ef\0\u2616\0\u263d\0\u2664\0\u268b"+
    "\0\u26b2\0\u26d9\0\u2700\0\u2727\0\u274e\0\u2775\0\u279c\0\u27c3"+
    "\0\u27ea\0\u2811\0\u2838\0\u285f\0\u2886\0\u28ad\0\u28d4\0\u28fb"+
    "\0\u2922\0\u2949\0\u2970\0\u2997\0\u29be\0\u29e5\0\u2a0c\0\u2a33"+
    "\0\u2a5a\0\u2a81\0\u2aa8\0\u2acf\0\u2af6\0\u2b1d\0\u2b44\0\u2b6b"+
    "\0\u2b92\0\u2bb9\0\u2be0\0\u2c07\0\u2c2e\0\u2c55\0\u2c7c\0\u2ca3"+
    "\0\u2cca\0\u2cf1\0\u2d18\0\u2d3f\0\u2d66\0\u2d8d\0\u2db4\0\u2ddb"+
    "\0\u2e02\0\u2e29\0\u2e50\0\u2e77\0\u2e9e\0\u2ec5\0\u2eec\0\u2f13"+
    "\0\u2f3a\0\u2f61\0\u2f88\0\u2faf\0\u2fd6\0\u2ffd\0\u3024\0\u304b"+
    "\0\u3072\0\u3099\0\u30c0\0\u30e7\0\u310e\0\u3135\0\u315c\0\u3183"+
    "\0\u31aa\0\u31d1\0\u31f8\0\u321f\0\u3246\0\u326d\0\u3294\0\u32bb"+
    "\0\u32e2\0\u237f\0\u23a6\0\u3309\0\u3330\0\u3357\0\u337e\0\u33a5"+
    "\0\u02be\0\u33cc\0\u33f3\0\u341a\0\u3441\0\u3468\0\u2505\0\u348f"+
    "\0\u34b6\0\u34dd\0\u3504\0\u352b\0\u3552\0\u3579\0\u35a0\0\u35c7"+
    "\0\u35ee\0\u3615\0\u363c\0\u3663\0\u368a\0\u36b1\0\u36d8\0\u36ff"+
    "\0\u3726\0\u374d\0\u3774\0\u02be\0\u379b\0\u27c3\0\u37c2\0\u37e9"+
    "\0\u3810\0\u3837\0\u385e\0\u3885\0\u38ac\0\u38d3\0\u38fa\0\u3921"+
    "\0\u3948\0\u396f\0\u3996\0\u39bd\0\u39e4\0\u3a0b\0\u3a32\0\u3a59"+
    "\0\u3a80\0\u3aa7\0\u3ace\0\u3af5\0\u3b1c\0\u3b43\0\u3b6a\0\u3b91"+
    "\0\u3bb8\0\u3bdf\0\u3c06\0\u3c2d\0\u3c54\0\u3c7b\0\u3ca2\0\u3cc9"+
    "\0\u3cf0\0\u02be\0\u3d17\0\u2ddb\0\u3d3e\0\u3d65\0\u3d8c\0\u3db3"+
    "\0\u3dda\0\u3e01\0\u3e28\0\u3e4f\0\u2f88\0\u3e76\0\u3e9d\0\u3ec4"+
    "\0\u3eeb\0\u3f12\0\u3f39\0\u3f60\0\u3f87\0\u3fae\0\u3fd5\0\u3ffc"+
    "\0\u4023\0\u3183\0\u404a\0\u4071\0\u4098\0\u40bf\0\u40e6\0\u410d"+
    "\0\u4134\0\u415b\0\u4182\0\u41a9\0\u41d0\0\u41f7\0\u421e\0\u4245"+
    "\0\u02be\0\u426c\0\u34dd\0\u4293\0\u42ba\0\u42e1\0\u4308\0\u432f"+
    "\0\u4356\0\u437d\0\u43a4\0\u43cb\0\u43f2\0\u4419\0\u4440\0\u02be"+
    "\0\u4467\0\u36b1\0\u448e\0\u44b5\0\u1af7\0\u44dc\0\u4503\0\u452a"+
    "\0\u4551\0\u4578\0\u459f\0\u45c6\0\u45ed\0\u385e\0\u4614\0\u463b"+
    "\0\u4662\0\u396f\0\u4689\0\u46b0\0\u46d7\0\u46fe\0\u4725\0\u474c"+
    "\0\u4773\0\u479a\0\u47c1\0\u47e8\0\u480f\0\u4836\0\u485d\0\u4884"+
    "\0\u48ab\0\u48d2\0\u48f9\0\u4920\0\u4947\0\u496e\0\u4995\0\u49bc"+
    "\0\u49e3\0\u4a0a\0\u4a31\0\u4a58\0\u4a7f\0\u4aa6\0\u4acd\0\u4af4"+
    "\0\u4b1b\0\u4b42\0\u4b69\0\u4b90\0\u4bb7\0\u4bde\0\u4c05\0\u4c2c"+
    "\0\u4c53\0\u4c7a\0\u4ca1\0\u4cc8\0\u4cef\0\u4d16\0\u4d3d\0\u4d64"+
    "\0\u4d8b\0\u4db2\0\u4dd9\0\u4e00\0\u4e27\0\u4e4e\0\u4e75\0\u4e9c"+
    "\0\u4ec3\0\u4eea\0\u4f11\0\u02be\0\u4f38\0\u4f5f\0\u4f86\0\u4fad"+
    "\0\u4fad\0\u4fd4\0\u4ffb\0\u5022\0\u5049\0\u5070\0\u5097\0\u50be"+
    "\0\u50be\0\u50e5\0\u510c\0\u5133\0\u515a\0\u5181\0\u51a8\0\u02be"+
    "\0\u51cf\0\u51f6\0\u521d\0\u46d7\0\u5244\0\u526b\0\u5292\0\u52b9"+
    "\0\u52e0\0\u5307\0\u532e\0\u5355\0\u537c\0\u53a3\0\u53ca\0\u53f1"+
    "\0\u5418\0\u4b42\0\u543f\0\u5466\0\u548d\0\u54b4\0\u54db\0\u5502"+
    "\0\u02be\0\u5529\0\u5550\0\u4a31\0\u5577\0\u559e\0\u55c5\0\u55ec"+
    "\0\u5613\0\u563a\0\u5661\0\u5688\0\u56af\0\u56d6\0\u56fd\0\u5724"+
    "\0\u574b\0\u5772\0\u5799\0\u57c0\0\u57e7\0\u580e\0\u5835\0\u02be"+
    "\0\u585c\0\u4e4e\0\u5883\0\u58aa\0\u58d1\0\u58f8\0\u591f\0\u5946"+
    "\0\u5097\0\u596d\0\u5994\0\u59bb\0\u59e2\0\u5a09\0\u5a30\0\u5a57"+
    "\0\u5a7e\0\u5aa5\0\u5acc\0\u5af3\0\u5b1a\0\u5b41\0\u5292\0\u5b68"+
    "\0\u5b8f\0\u5bb6\0\u5bdd\0\u5c04\0\u5c2b\0\u5c52\0\u5c79\0\u5ca0"+
    "\0\u5cc7\0\u5cee\0\u5d15\0\u5d3c\0\u5d63\0\u5d8a\0\u5db1\0\u5dd8"+
    "\0\u5dff\0\u5e26\0\u5e4d\0\u5e74\0\u56af\0\u5e9b\0\u5ec2\0\u5ee9"+
    "\0\u5f10\0\u5f37\0\u5f5e\0\u5f85\0\u5fac\0\u5fd3\0\u5ffa\0\u6021"+
    "\0\u6048\0\u606f\0\u6096\0\u60bd\0\u60e4\0\u610b\0\u6132\0\u6159"+
    "\0\u6180\0\u61a7\0\u02be\0\u61ce\0\u50e5\0\u510c\0\u5133\0\u61f5"+
    "\0\u621c\0\u6243\0\u626a\0\u6291\0\u62b8\0\u62df\0\u6306\0\u632d"+
    "\0\u6354\0\u637b\0\u63a2\0\u63c9\0\u63f0\0\u6417\0\u643e\0\u6465"+
    "\0\u02be\0\u648c\0\u64b3\0\u64da\0\u6501\0\u02be\0\u6528\0\u654f"+
    "\0\u6576\0\u02be\0\u659d\0\u65c4\0\u65eb\0\u6612\0\u6639\0\u6660"+
    "\0\u6687\0\u66ae\0\u66d5\0\u66fc\0\u6723\0\u674a\0\u6771\0\u6798"+
    "\0\u67bf\0\u67e6\0\u680d\0\u6834\0\u685b\0\u6882\0\u68a9\0\u68d0"+
    "\0\u68f7\0\u691e\0\u6945\0\u696c\0\u6993\0\u69ba\0\u69e1\0\u6a08"+
    "\0\u6a2f\0\u6a56\0\u6a7d\0\u6aa4\0\u6acb\0\u6af2\0\u6b19\0\u6b40"+
    "\0\u6b67\0\u6b8e\0\u6bb5\0\u6bdc\0\u6c03\0\u6c2a\0\u6c51\0\u6c78"+
    "\0\u6c9f\0\u6cc6\0\u6ced\0\u6d14\0\u6d3b\0\u6d62\0\u6d89\0\u6db0"+
    "\0\u6dd7\0\u6dfe\0\u02be\0\u6e25\0\u6e4c\0\u6e73\0\u6e9a\0\u6ec1"+
    "\0\u6ee8\0\u6f0f\0\u6f36\0\u6f5d\0\u6f84\0\u6fab\0\u6fd2\0\u6ff9"+
    "\0\u7020\0\u7047\0\u706e\0\u7095\0\u70bc\0\u70e3\0\u710a\0\u7131"+
    "\0\u7158\0\u717f\0\u71a6\0\u71cd\0\u71f4\0\u721b\0\u7242\0\u7269"+
    "\0\u7290\0\u72b7\0\u72de\0\u7305\0\u732c\0\u7353\0\u737a\0\u73a1"+
    "\0\u73c8\0\u73ef\0\u7416\0\u743d\0\u7464\0\u748b\0\u3f12\0\u74b2"+
    "\0\u74d9\0\u7500\0\u7527\0\u754e\0\u7575\0\u759c\0\u75c3\0\u75ea";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[840];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\11\1\12\1\13\2\11\1\14\1\15\1\13\2\11"+
    "\7\14\1\16\1\14\1\17\2\14\1\20\2\11\3\14"+
    "\1\11\1\21\1\22\1\23\3\15\1\24\1\15\2\11"+
    "\1\25\1\26\1\27\23\25\1\30\6\25\2\31\11\25"+
    "\1\26\1\27\23\25\1\32\6\25\2\31\10\25\1\33"+
    "\1\34\3\33\1\35\1\36\3\33\14\35\3\33\3\35"+
    "\3\33\6\36\2\33\1\37\1\40\3\37\1\41\1\42"+
    "\3\37\14\41\3\37\3\41\3\37\6\42\2\37\1\43"+
    "\2\44\2\43\1\45\1\46\2\44\1\43\5\45\1\47"+
    "\6\45\3\43\3\45\2\43\1\44\6\46\2\43\3\50"+
    "\1\51\1\50\1\52\1\53\3\50\14\52\3\50\3\52"+
    "\3\50\1\54\3\53\1\55\1\53\2\50\3\56\1\57"+
    "\2\56\1\60\30\56\1\61\3\60\1\62\1\60\2\56"+
    "\3\0\1\63\1\0\1\64\1\65\3\0\6\64\1\66"+
    "\5\64\3\0\3\64\3\0\1\67\3\65\1\70\1\65"+
    "\3\0\1\71\1\13\1\63\1\0\1\72\1\73\1\71"+
    "\2\0\6\72\1\74\1\75\4\72\3\0\3\72\2\0"+
    "\1\71\1\76\3\73\1\77\1\73\3\0\2\71\1\63"+
    "\1\0\1\72\1\73\1\71\2\0\6\72\1\74\1\75"+
    "\4\72\3\0\3\72\2\0\1\71\1\76\3\73\1\77"+
    "\1\73\3\0\2\100\1\0\1\101\1\102\1\0\1\100"+
    "\2\0\14\102\2\0\1\101\3\102\2\0\1\100\11\0"+
    "\2\103\1\63\1\104\1\64\1\105\1\103\2\0\6\64"+
    "\1\66\5\64\2\0\1\104\3\64\2\0\1\103\1\106"+
    "\3\105\1\107\1\105\3\0\2\100\1\0\1\101\1\102"+
    "\1\0\1\100\2\0\14\102\2\0\1\101\3\102\2\0"+
    "\1\100\6\0\1\110\2\0\2\100\1\0\1\101\1\102"+
    "\1\0\1\100\2\0\12\102\1\111\1\102\2\0\1\101"+
    "\3\102\2\0\1\100\11\0\2\112\1\63\1\0\1\64"+
    "\1\65\1\112\2\0\2\64\1\113\3\64\1\66\5\64"+
    "\3\0\1\114\2\64\2\0\1\112\1\67\3\65\1\70"+
    "\1\65\3\0\2\103\1\63\1\104\1\64\1\105\1\103"+
    "\2\0\6\64\1\66\5\64\2\0\1\104\3\64\2\0"+
    "\1\103\1\106\1\115\1\105\1\116\1\107\1\105\3\0"+
    "\2\103\1\63\1\104\1\64\1\105\1\103\2\0\6\64"+
    "\1\66\5\64\2\0\1\104\3\64\2\0\1\103\1\106"+
    "\3\105\1\107\1\117\53\0\1\27\45\0\2\120\4\0"+
    "\1\120\20\0\1\121\5\0\1\120\11\0\2\122\4\0"+
    "\1\122\20\0\1\123\5\0\1\122\30\0\1\124\30\0"+
    "\1\125\15\0\1\124\34\0\1\126\11\0\1\124\16\0"+
    "\6\126\10\0\1\127\11\0\1\130\16\0\6\127\4\0"+
    "\1\131\3\0\1\127\11\0\1\130\16\0\6\127\3\0"+
    "\2\132\1\0\1\133\1\0\1\127\1\132\1\134\6\0"+
    "\1\135\1\130\7\0\1\133\5\0\1\132\6\127\3\0"+
    "\2\136\4\0\2\136\6\0\1\137\16\0\1\136\11\0"+
    "\2\140\1\0\1\141\1\142\1\0\1\140\2\0\14\142"+
    "\2\0\1\141\3\142\2\0\1\140\11\0\2\143\1\0"+
    "\1\144\1\0\1\145\1\143\20\0\1\144\5\0\1\143"+
    "\6\145\3\0\2\140\1\0\1\141\1\142\1\0\1\140"+
    "\2\0\4\142\1\146\7\142\2\0\1\141\3\142\2\0"+
    "\1\140\16\0\1\147\30\0\6\147\3\0\2\150\1\0"+
    "\1\151\1\152\1\0\1\150\2\0\14\152\2\0\1\151"+
    "\3\152\2\0\1\150\11\0\2\153\1\0\1\154\1\0"+
    "\1\155\1\153\20\0\1\154\5\0\1\153\6\155\3\0"+
    "\2\153\1\0\1\154\1\0\1\155\1\153\20\0\1\154"+
    "\5\0\1\153\1\155\1\156\1\155\1\157\2\155\3\0"+
    "\2\153\1\0\1\154\1\0\1\155\1\153\20\0\1\154"+
    "\5\0\1\153\5\155\1\160\10\0\1\161\30\0\6\161"+
    "\10\0\1\162\30\0\6\162\10\0\1\162\30\0\1\162"+
    "\1\163\1\162\1\164\2\162\10\0\1\162\30\0\5\162"+
    "\1\165\10\0\1\166\30\0\6\166\3\0\2\167\1\0"+
    "\1\170\1\64\1\0\1\167\2\0\14\64\2\0\1\170"+
    "\3\64\2\0\1\167\11\0\2\171\1\0\1\172\1\0"+
    "\1\173\1\171\1\174\5\0\1\175\1\176\10\0\1\172"+
    "\5\0\1\171\6\173\2\0\1\177\2\200\2\177\1\64"+
    "\1\177\1\200\2\177\6\64\1\201\1\64\1\202\1\64"+
    "\1\201\1\64\3\177\3\64\1\203\1\177\1\200\10\177"+
    "\1\0\2\171\1\0\1\172\1\0\1\173\1\171\1\174"+
    "\5\0\1\175\1\176\10\0\1\172\5\0\1\171\1\173"+
    "\1\204\1\173\1\205\2\173\3\0\2\171\1\0\1\172"+
    "\1\0\1\173\1\171\1\174\5\0\1\175\1\176\10\0"+
    "\1\172\5\0\1\171\5\173\1\206\3\0\2\71\1\207"+
    "\1\0\1\102\1\210\1\71\2\0\7\102\1\211\4\102"+
    "\3\0\3\102\2\0\1\71\1\212\3\210\1\213\1\210"+
    "\3\0\2\214\1\0\1\215\1\72\1\0\1\214\2\0"+
    "\14\72\2\0\1\215\3\72\2\0\1\214\11\0\2\216"+
    "\1\0\1\217\1\0\1\220\1\216\1\174\5\0\1\175"+
    "\1\176\10\0\1\217\5\0\1\216\6\220\2\0\1\177"+
    "\2\221\2\177\1\72\1\177\1\221\2\177\6\72\1\222"+
    "\1\72\1\223\1\72\1\222\1\72\3\177\3\72\1\203"+
    "\1\177\1\221\10\177\1\0\2\214\1\0\1\215\1\72"+
    "\1\0\1\214\2\0\14\72\2\0\1\215\3\72\2\0"+
    "\1\214\6\0\1\110\2\0\2\216\1\0\1\217\1\0"+
    "\1\220\1\216\1\174\5\0\1\175\1\176\10\0\1\217"+
    "\5\0\1\216\1\220\1\224\1\220\1\225\2\220\3\0"+
    "\2\216\1\0\1\217\1\0\1\220\1\216\1\174\5\0"+
    "\1\175\1\176\10\0\1\217\5\0\1\216\5\220\1\226"+
    "\3\0\2\100\1\0\1\101\2\0\1\100\20\0\1\101"+
    "\5\0\1\100\11\0\2\101\3\0\1\227\1\101\26\0"+
    "\1\101\6\227\3\0\2\103\1\0\1\104\2\0\1\103"+
    "\20\0\1\104\5\0\1\103\11\0\2\104\2\0\1\230"+
    "\1\0\1\104\2\0\14\230\3\0\3\230\2\0\1\104"+
    "\11\0\2\231\1\0\1\232\1\0\1\220\1\231\1\174"+
    "\5\0\1\175\1\176\10\0\1\232\5\0\1\231\6\220"+
    "\3\0\2\231\1\0\1\232\1\0\1\220\1\231\1\174"+
    "\5\0\1\175\1\176\10\0\1\232\5\0\1\231\1\220"+
    "\1\224\1\220\1\225\2\220\3\0\2\231\1\0\1\232"+
    "\1\0\1\220\1\231\1\174\5\0\1\175\1\176\10\0"+
    "\1\232\5\0\1\231\5\220\1\226\5\0\1\233\2\0"+
    "\1\234\30\0\1\235\3\234\1\236\1\234\3\0\2\100"+
    "\1\0\1\101\1\102\1\0\1\100\2\0\3\102\1\237"+
    "\10\102\2\0\1\101\3\102\2\0\1\100\11\0\2\112"+
    "\4\0\1\112\4\0\1\240\14\0\1\241\4\0\1\112"+
    "\11\0\2\242\1\0\1\170\1\64\1\0\1\242\2\0"+
    "\14\64\2\0\1\170\3\64\2\0\1\242\11\0\2\167"+
    "\1\0\1\170\1\64\1\0\1\167\2\0\14\64\2\0"+
    "\1\170\1\64\1\243\1\64\2\0\1\167\11\0\2\231"+
    "\1\0\1\232\1\0\1\220\1\231\1\174\5\0\1\175"+
    "\1\176\10\0\1\232\5\0\1\231\1\220\3\244\2\220"+
    "\3\0\2\231\1\0\1\232\1\0\1\244\1\231\1\174"+
    "\5\0\1\175\1\176\10\0\1\232\5\0\1\231\6\244"+
    "\3\0\2\231\1\0\1\232\1\0\1\220\1\231\1\174"+
    "\5\0\1\175\1\176\10\0\1\232\5\0\1\231\1\244"+
    "\4\220\1\244\16\0\1\245\63\0\1\246\15\0\5\247"+
    "\1\0\4\247\6\0\1\250\1\0\1\251\1\0\1\250"+
    "\1\0\3\247\3\0\1\252\12\247\6\0\1\126\30\0"+
    "\6\126\3\0\2\253\1\0\1\254\1\0\1\127\1\253"+
    "\1\255\6\0\1\256\10\0\1\254\5\0\1\253\6\127"+
    "\2\0\5\257\1\0\4\257\6\0\1\260\1\0\1\261"+
    "\1\0\1\260\1\0\3\257\3\0\1\262\12\257\1\0"+
    "\2\132\1\0\1\133\2\0\1\132\1\134\6\0\1\135"+
    "\10\0\1\133\5\0\1\132\11\0\2\133\1\263\2\0"+
    "\1\264\1\133\26\0\1\133\1\265\3\264\1\266\1\264"+
    "\3\0\2\134\4\0\2\134\6\0\1\135\16\0\1\134"+
    "\26\0\1\267\46\0\1\270\31\0\2\140\1\0\1\141"+
    "\2\0\1\140\20\0\1\141\5\0\1\140\11\0\2\141"+
    "\3\0\1\271\1\141\26\0\1\141\6\271\3\0\2\143"+
    "\1\0\1\144\2\0\1\143\20\0\1\144\5\0\1\143"+
    "\11\0\2\144\2\0\1\272\1\273\1\144\2\0\14\272"+
    "\3\0\3\272\2\0\1\144\6\273\3\0\2\140\1\0"+
    "\1\141\1\142\1\0\1\140\2\0\1\142\1\274\12\142"+
    "\2\0\1\141\1\274\2\142\2\0\1\140\16\0\1\275"+
    "\30\0\6\275\3\0\2\150\1\0\1\151\2\0\1\150"+
    "\20\0\1\151\5\0\1\150\11\0\2\151\3\0\1\276"+
    "\1\151\26\0\1\151\6\276\3\0\2\153\1\0\1\154"+
    "\2\0\1\153\20\0\1\154\5\0\1\153\11\0\2\154"+
    "\2\0\1\277\1\0\1\154\2\0\14\277\3\0\3\277"+
    "\2\0\1\154\11\0\2\300\1\0\1\301\1\0\1\302"+
    "\1\300\20\0\1\301\5\0\1\300\6\302\3\0\2\300"+
    "\1\0\1\301\1\0\1\302\1\300\20\0\1\301\5\0"+
    "\1\300\1\302\3\303\2\302\3\0\2\300\1\0\1\301"+
    "\1\0\1\303\1\300\20\0\1\301\5\0\1\300\6\303"+
    "\3\0\2\300\1\0\1\301\1\0\1\302\1\300\20\0"+
    "\1\301\5\0\1\300\1\303\4\302\1\303\3\0\2\162"+
    "\1\0\1\304\2\0\1\162\20\0\1\304\5\0\1\162"+
    "\11\0\2\162\1\0\1\304\2\0\1\162\20\0\1\304"+
    "\5\0\1\162\1\0\3\161\5\0\2\162\1\0\1\304"+
    "\1\0\1\161\1\162\20\0\1\304\5\0\1\162\6\161"+
    "\3\0\2\162\1\0\1\304\2\0\1\162\20\0\1\304"+
    "\5\0\1\162\1\161\4\0\1\161\10\0\1\305\30\0"+
    "\6\305\3\0\2\167\1\0\1\170\2\0\1\167\20\0"+
    "\1\170\5\0\1\167\11\0\2\170\3\0\1\306\1\170"+
    "\26\0\1\170\6\306\3\0\2\171\1\0\1\172\1\0"+
    "\1\307\1\171\1\174\5\0\1\175\1\176\10\0\1\172"+
    "\5\0\1\171\6\307\3\0\2\172\1\310\1\0\1\311"+
    "\1\312\1\172\2\0\14\311\3\0\3\311\2\0\1\172"+
    "\1\313\3\312\1\314\1\312\3\0\2\315\1\0\1\316"+
    "\1\0\1\317\1\315\1\174\5\0\1\175\1\176\10\0"+
    "\1\316\5\0\1\315\6\317\3\0\2\174\3\0\1\307"+
    "\2\174\5\0\1\175\1\176\16\0\1\174\6\307\3\0"+
    "\2\320\3\0\1\321\1\320\7\0\1\320\16\0\1\320"+
    "\6\321\20\0\1\322\31\0\2\177\1\323\1\0\1\102"+
    "\1\324\1\177\2\0\7\102\1\211\4\102\3\0\3\102"+
    "\2\0\1\177\1\325\3\324\1\326\1\324\3\0\2\200"+
    "\1\323\1\170\1\102\1\324\1\200\2\0\7\102\1\211"+
    "\4\102\2\0\1\170\3\102\2\0\1\200\1\325\3\324"+
    "\1\326\1\324\2\0\1\177\2\200\2\177\1\64\1\177"+
    "\1\200\2\177\14\64\3\177\3\64\1\203\1\177\1\200"+
    "\10\177\1\0\2\167\1\0\1\170\1\64\1\0\1\167"+
    "\2\0\14\64\2\0\1\170\2\64\1\327\2\0\1\167"+
    "\10\0\5\177\1\102\1\330\3\177\7\102\1\211\4\102"+
    "\3\177\3\102\3\177\1\331\3\330\1\332\1\330\2\177"+
    "\1\0\2\315\1\0\1\316\1\0\1\317\1\315\1\174"+
    "\5\0\1\175\1\176\10\0\1\316\5\0\1\315\1\317"+
    "\3\333\2\317\3\0\2\315\1\0\1\316\1\0\1\333"+
    "\1\315\1\174\5\0\1\175\1\176\10\0\1\316\5\0"+
    "\1\315\6\333\3\0\2\315\1\0\1\316\1\0\1\317"+
    "\1\315\1\174\5\0\1\175\1\176\10\0\1\316\5\0"+
    "\1\315\1\333\4\317\1\333\10\0\1\334\30\0\6\334"+
    "\3\0\2\103\1\0\1\104\1\0\1\335\1\103\20\0"+
    "\1\104\5\0\1\103\6\335\3\0\2\103\1\0\1\104"+
    "\1\0\1\335\1\103\20\0\1\104\5\0\1\103\1\335"+
    "\1\336\1\335\1\337\2\335\3\0\2\103\1\0\1\104"+
    "\1\0\1\335\1\103\20\0\1\104\5\0\1\103\5\335"+
    "\1\340\3\0\2\214\1\0\1\215\2\0\1\214\20\0"+
    "\1\215\5\0\1\214\11\0\2\215\3\0\1\341\1\215"+
    "\26\0\1\215\6\341\3\0\2\216\1\0\1\217\1\0"+
    "\1\307\1\216\1\174\5\0\1\175\1\176\10\0\1\217"+
    "\5\0\1\216\6\307\3\0\2\217\1\310\1\0\1\342"+
    "\1\312\1\217\2\0\14\342\3\0\3\342\2\0\1\217"+
    "\1\313\3\312\1\314\1\312\3\0\2\343\1\0\1\344"+
    "\1\0\1\345\1\343\1\174\5\0\1\175\1\176\10\0"+
    "\1\344\5\0\1\343\6\345\3\0\2\221\1\323\1\215"+
    "\1\102\1\324\1\221\2\0\7\102\1\211\4\102\2\0"+
    "\1\215\3\102\2\0\1\221\1\325\3\324\1\326\1\324"+
    "\2\0\1\177\2\221\2\177\1\72\1\177\1\221\2\177"+
    "\14\72\3\177\3\72\1\203\1\177\1\221\10\177\1\0"+
    "\2\214\1\0\1\215\1\72\1\0\1\214\2\0\14\72"+
    "\2\0\1\215\2\72\1\346\2\0\1\214\11\0\2\343"+
    "\1\0\1\344\1\0\1\345\1\343\1\174\5\0\1\175"+
    "\1\176\10\0\1\344\5\0\1\343\1\345\3\347\2\345"+
    "\3\0\2\343\1\0\1\344\1\0\1\347\1\343\1\174"+
    "\5\0\1\175\1\176\10\0\1\344\5\0\1\343\6\347"+
    "\3\0\2\343\1\0\1\344\1\0\1\345\1\343\1\174"+
    "\5\0\1\175\1\176\10\0\1\344\5\0\1\343\1\347"+
    "\4\345\1\347\3\0\2\350\1\0\1\351\1\0\1\227"+
    "\1\350\1\352\6\0\1\353\10\0\1\351\5\0\1\350"+
    "\6\227\3\0\2\350\1\0\1\351\1\230\1\0\1\350"+
    "\1\352\1\0\5\230\1\354\6\230\2\0\1\351\3\230"+
    "\2\0\1\350\11\0\2\231\1\0\1\232\1\0\1\307"+
    "\1\231\1\174\5\0\1\175\1\176\10\0\1\232\5\0"+
    "\1\231\6\307\3\0\2\232\1\310\1\0\1\355\1\356"+
    "\1\232\2\0\14\355\3\0\3\355\2\0\1\232\1\357"+
    "\3\356\1\360\1\356\10\0\1\234\30\0\6\234\10\0"+
    "\1\361\30\0\6\361\10\0\1\361\30\0\1\361\1\362"+
    "\1\361\1\363\2\361\10\0\1\361\30\0\5\361\1\364"+
    "\3\0\2\100\1\0\1\101\1\102\1\0\1\100\2\0"+
    "\13\102\1\365\2\0\1\101\3\102\2\0\1\100\11\0"+
    "\2\366\4\0\1\366\26\0\1\366\42\0\1\367\15\0"+
    "\2\242\1\0\1\170\2\0\1\242\20\0\1\170\5\0"+
    "\1\242\11\0\2\343\1\0\1\344\1\0\1\370\1\343"+
    "\1\174\5\0\1\175\1\176\10\0\1\344\5\0\1\343"+
    "\6\370\31\0\1\371\51\0\1\371\15\0\2\247\3\0"+
    "\1\372\1\247\26\0\1\247\6\372\2\0\5\247\1\0"+
    "\4\247\14\0\3\247\3\0\1\252\12\247\33\0\1\373"+
    "\13\0\5\247\1\0\1\374\3\247\14\0\3\247\3\0"+
    "\3\247\6\374\2\247\1\0\2\253\1\0\1\254\2\0"+
    "\1\253\1\255\6\0\1\256\10\0\1\254\5\0\1\253"+
    "\11\0\2\254\1\375\2\0\1\376\1\254\26\0\1\254"+
    "\1\377\3\376\1\u0100\1\376\3\0\2\255\4\0\2\255"+
    "\6\0\1\256\16\0\1\255\26\0\1\u0101\31\0\2\257"+
    "\3\0\1\u0102\1\257\26\0\1\257\6\u0102\2\0\5\257"+
    "\1\0\4\257\14\0\3\257\3\0\1\262\12\257\33\0"+
    "\1\u0103\13\0\5\257\1\0\1\u0104\3\257\14\0\3\257"+
    "\3\0\3\257\6\u0104\2\257\6\0\1\264\30\0\6\264"+
    "\10\0\1\u0105\30\0\6\u0105\10\0\1\u0105\30\0\1\u0105"+
    "\1\u0106\1\u0105\1\u0107\2\u0105\10\0\1\u0105\30\0\5\u0105"+
    "\1\u0108\15\0\1\u0109\15\0\1\u0109\30\0\1\u010a\15\0"+
    "\1\u010a\23\0\1\271\30\0\6\271\7\0\1\272\4\0"+
    "\14\272\3\0\3\272\14\0\2\u010b\1\0\1\u010c\1\0"+
    "\1\273\1\u010b\20\0\1\u010c\5\0\1\u010b\6\273\3\0"+
    "\2\u010d\1\u010e\1\141\1\142\1\u010f\1\u010d\2\0\1\142"+
    "\1\u0110\12\142\2\0\1\141\1\u0110\2\142\2\0\1\u010d"+
    "\1\u0111\3\u010f\1\u0112\1\u010f\3\0\2\275\1\0\1\u0113"+
    "\2\0\1\275\20\0\1\u0113\5\0\1\275\11\0\2\u0114"+
    "\1\0\1\u0115\1\0\1\276\1\u0114\20\0\1\u0115\5\0"+
    "\1\u0114\6\276\3\0\2\u0114\1\0\1\u0115\1\277\1\0"+
    "\1\u0114\2\0\14\277\2\0\1\u0115\3\277\2\0\1\u0114"+
    "\11\0\2\300\1\0\1\301\2\0\1\300\20\0\1\301"+
    "\5\0\1\300\11\0\2\301\2\0\1\u0116\1\u0117\1\301"+
    "\2\0\14\u0116\3\0\3\u0116\2\0\1\301\6\u0117\3\0"+
    "\2\153\1\0\1\154\1\0\1\302\1\153\20\0\1\154"+
    "\5\0\1\153\6\302\3\0\2\304\3\0\1\u0118\1\304"+
    "\26\0\1\304\6\u0118\3\0\2\305\1\0\1\u0119\2\0"+
    "\1\305\20\0\1\u0119\5\0\1\305\11\0\2\u011a\1\0"+
    "\1\u011b\1\0\1\306\1\u011a\20\0\1\u011b\5\0\1\u011a"+
    "\6\306\3\0\2\307\1\0\1\u011c\1\0\2\307\1\174"+
    "\5\0\1\175\1\176\10\0\1\u011c\5\0\7\307\10\0"+
    "\1\u011d\30\0\6\u011d\3\0\2\u011a\1\0\1\u011b\1\311"+
    "\1\0\1\u011a\2\0\14\311\2\0\1\u011b\3\311\2\0"+
    "\1\u011a\11\0\2\u011e\1\0\1\u011f\1\0\1\u0120\1\u011e"+
    "\20\0\1\u011f\5\0\1\u011e\6\u0120\3\0\2\u011e\1\0"+
    "\1\u011f\1\0\1\u0120\1\u011e\20\0\1\u011f\5\0\1\u011e"+
    "\1\u0120\1\u0121\1\u0120\1\u0122\2\u0120\3\0\2\u011e\1\0"+
    "\1\u011f\1\0\1\u0120\1\u011e\20\0\1\u011f\5\0\1\u011e"+
    "\5\u0120\1\u0123\3\0\2\315\1\0\1\316\1\0\1\307"+
    "\1\315\1\174\5\0\1\175\1\176\10\0\1\316\5\0"+
    "\1\315\6\307\3\0\2\316\1\310\1\0\1\u0124\1\u0125"+
    "\1\316\2\0\14\u0124\3\0\3\u0124\2\0\1\316\1\u0126"+
    "\3\u0125\1\u0127\1\u0125\3\0\2\171\1\0\1\172\1\0"+
    "\1\317\1\171\1\174\5\0\1\175\1\176\10\0\1\172"+
    "\5\0\1\171\6\317\3\0\2\320\3\0\1\321\1\320"+
    "\26\0\1\320\6\321\3\0\2\u0128\1\0\1\u011c\1\0"+
    "\1\321\1\u0128\1\u0129\6\0\1\176\10\0\1\u011c\5\0"+
    "\1\u0128\6\321\15\0\1\u012a\15\0\1\u012a\23\0\1\u012b"+
    "\30\0\6\u012b\3\0\2\u012c\1\0\1\u012d\1\0\1\u012e"+
    "\1\u012c\1\u012f\5\0\1\u0130\1\176\10\0\1\u012d\5\0"+
    "\1\u012c\6\u012e\3\0\2\u012c\1\0\1\u012d\1\0\1\u012e"+
    "\1\u012c\1\u012f\5\0\1\u0130\1\176\10\0\1\u012d\5\0"+
    "\1\u012c\1\u012e\1\u0131\1\u012e\1\u0132\2\u012e\3\0\2\u012c"+
    "\1\0\1\u012d\1\0\1\u012e\1\u012c\1\u012f\5\0\1\u0130"+
    "\1\176\10\0\1\u012d\5\0\1\u012c\5\u012e\1\u0133\2\0"+
    "\1\177\2\200\2\177\1\64\1\177\1\200\2\177\4\64"+
    "\1\u0134\7\64\3\177\3\64\1\203\1\177\1\200\10\177"+
    "\1\0\2\u0135\1\323\1\u012d\1\102\1\u0136\1\u0135\1\u012f"+
    "\1\0\4\102\1\u0137\1\u0138\1\102\1\211\4\102\2\0"+
    "\1\u012d\3\102\2\0\1\u0135\1\u0139\3\u0136\1\u013a\1\u0136"+
    "\3\0\2\u0135\1\323\1\u012d\1\102\1\u0136\1\u0135\1\u012f"+
    "\1\0\4\102\1\u0137\1\u0138\1\102\1\211\4\102\2\0"+
    "\1\u012d\3\102\2\0\1\u0135\1\u0139\1\u013b\1\u0136\1\u013c"+
    "\1\u013a\1\u0136\3\0\2\u0135\1\323\1\u012d\1\102\1\u0136"+
    "\1\u0135\1\u012f\1\0\4\102\1\u0137\1\u0138\1\102\1\211"+
    "\4\102\2\0\1\u012d\3\102\2\0\1\u0135\1\u0139\3\u0136"+
    "\1\u013a\1\u013d\3\0\2\171\1\0\1\172\1\0\1\u013e"+
    "\1\171\1\174\5\0\1\175\1\176\10\0\1\172\5\0"+
    "\1\171\6\u013e\10\0\1\u013f\30\0\6\u013f\3\0\2\u0140"+
    "\1\0\1\u0141\1\0\1\u0142\1\u0140\20\0\1\u0141\5\0"+
    "\1\u0140\6\u0142\3\0\2\u0140\1\0\1\u0141\1\0\1\u0142"+
    "\1\u0140\20\0\1\u0141\5\0\1\u0140\1\u0142\3\210\2\u0142"+
    "\3\0\2\u0140\1\0\1\u0141\1\0\1\210\1\u0140\20\0"+
    "\1\u0141\5\0\1\u0140\6\210\3\0\2\u0140\1\0\1\u0141"+
    "\1\0\1\u0142\1\u0140\20\0\1\u0141\5\0\1\u0140\1\210"+
    "\4\u0142\1\210\3\0\2\u0143\1\0\1\u011b\1\0\1\341"+
    "\1\u0143\1\352\6\0\1\353\10\0\1\u011b\5\0\1\u0143"+
    "\6\341\3\0\2\u0143\1\0\1\u011b\1\342\1\0\1\u0143"+
    "\1\352\1\0\5\342\1\u0144\6\342\2\0\1\u011b\3\342"+
    "\2\0\1\u0143\11\0\2\343\1\0\1\344\1\0\1\307"+
    "\1\343\1\174\5\0\1\175\1\176\10\0\1\344\5\0"+
    "\1\343\6\307\3\0\2\344\1\310\1\0\1\u0145\1\u0125"+
    "\1\344\2\0\14\u0145\3\0\3\u0145\2\0\1\344\1\u0126"+
    "\3\u0125\1\u0127\1\u0125\3\0\2\216\1\0\1\217\1\0"+
    "\1\345\1\216\1\174\5\0\1\175\1\176\10\0\1\217"+
    "\5\0\1\216\6\345\2\0\1\177\2\221\2\177\1\72"+
    "\1\177\1\221\2\177\4\72\1\u0146\7\72\3\177\3\72"+
    "\1\203\1\177\1\221\10\177\1\0\2\216\1\0\1\217"+
    "\1\0\1\u0147\1\216\1\174\5\0\1\175\1\176\10\0"+
    "\1\217\5\0\1\216\6\u0147\3\0\2\350\1\0\1\351"+
    "\2\0\1\350\1\352\6\0\1\353\10\0\1\351\5\0"+
    "\1\350\11\0\2\351\1\u0148\2\0\1\u0149\1\351\26\0"+
    "\1\351\1\u014a\3\u0149\1\u014b\1\u0149\3\0\2\352\4\0"+
    "\2\352\6\0\1\353\16\0\1\352\26\0\1\u014c\31\0"+
    "\2\350\1\0\1\351\1\230\1\0\1\350\1\352\1\0"+
    "\4\230\1\u014d\1\354\6\230\2\0\1\351\3\230\2\0"+
    "\1\350\11\0\2\u014e\1\0\1\u014f\1\355\1\0\1\u014e"+
    "\1\352\1\0\5\355\1\u0150\6\355\2\0\1\u014f\3\355"+
    "\2\0\1\u014e\11\0\2\u0151\1\0\1\u0152\1\0\1\u0153"+
    "\1\u0151\20\0\1\u0152\5\0\1\u0151\6\u0153\3\0\2\u0151"+
    "\1\0\1\u0152\1\0\1\u0153\1\u0151\20\0\1\u0152\5\0"+
    "\1\u0151\1\u0153\1\u0154\1\u0153\1\u0155\2\u0153\3\0\2\u0151"+
    "\1\0\1\u0152\1\0\1\u0153\1\u0151\20\0\1\u0152\5\0"+
    "\1\u0151\5\u0153\1\u0156\50\0\1\u0157\40\0\3\234\3\0"+
    "\1\u0157\6\0\1\234\30\0\6\234\1\0\1\u0157\37\0"+
    "\1\234\4\0\1\234\1\0\1\u0157\1\u0158\2\u0159\1\u0158"+
    "\1\u015a\1\u015b\1\u015c\1\u0159\2\u0158\3\u015b\1\u015d\10\u015b"+
    "\2\u0158\1\u015a\3\u015b\1\u015e\1\u0158\1\u0159\6\u015c\2\u0158"+
    "\1\0\2\231\1\0\1\232\1\0\1\345\1\231\1\174"+
    "\5\0\1\175\1\176\10\0\1\232\5\0\1\231\6\345"+
    "\10\0\1\372\30\0\6\372\2\0\5\247\1\0\4\247"+
    "\4\0\1\u015f\7\0\3\247\3\0\1\252\12\247\6\0"+
    "\1\376\30\0\6\376\10\0\1\u0160\30\0\6\u0160\10\0"+
    "\1\u0160\30\0\1\u0160\1\u0161\1\u0160\1\u0162\2\u0160\10\0"+
    "\1\u0160\30\0\5\u0160\1\u0163\15\0\1\u0164\15\0\1\u0164"+
    "\16\0\2\u0165\1\0\1\u0166\1\0\1\u0102\1\u0165\1\u0167"+
    "\6\0\1\u0168\10\0\1\u0166\5\0\1\u0165\6\u0102\2\0"+
    "\5\257\1\0\4\257\4\0\1\u0169\7\0\3\257\3\0"+
    "\1\262\12\257\1\0\2\u016a\1\0\1\u0166\1\0\1\u0102"+
    "\1\u016a\1\u0167\6\0\1\u0168\10\0\1\u0166\5\0\1\u016a"+
    "\6\u0102\3\0\2\u016b\4\0\1\u016b\26\0\1\u016b\6\0"+
    "\1\u016c\2\0\2\u016b\4\0\1\u016b\26\0\1\u016b\1\0"+
    "\3\264\2\0\1\u016c\2\0\2\u016b\3\0\1\264\1\u016b"+
    "\26\0\1\u016b\6\264\1\u016c\2\0\2\u016b\4\0\1\u016b"+
    "\26\0\1\u016b\1\264\4\0\1\264\1\u016c\2\0\2\133"+
    "\1\263\2\0\1\264\1\133\3\0\1\u016d\15\0\1\u016d"+
    "\4\0\1\133\1\265\3\264\1\266\1\264\3\0\2\u016e"+
    "\1\u010e\2\0\1\u010f\1\u016e\3\0\1\u016f\15\0\1\u016f"+
    "\4\0\1\u016e\1\u0111\3\u010f\1\u0112\1\u010f\3\0\2\u010b"+
    "\1\0\1\u010c\2\0\1\u010b\20\0\1\u010c\5\0\1\u010b"+
    "\11\0\2\u010c\3\0\1\u0170\1\u010c\26\0\1\u010c\6\u0170"+
    "\3\0\2\u010d\1\u010e\1\141\1\0\1\u010f\1\u010d\20\0"+
    "\1\141\5\0\1\u010d\1\u0111\3\u010f\1\u0112\1\u010f\10\0"+
    "\1\u010f\30\0\6\u010f\10\0\1\u0171\30\0\6\u0171\2\0"+
    "\1\u0172\2\140\1\u0172\1\u0173\1\u0174\1\u0172\1\u0175\2\u0172"+
    "\14\u0174\2\u0172\1\u0173\3\u0174\1\u0172\1\0\1\140\10\u0172"+
    "\6\0\1\u0171\30\0\1\u0171\1\u0176\1\u0171\1\u0177\2\u0171"+
    "\10\0\1\u0171\30\0\5\u0171\1\u0178\3\0\2\u0113\2\0"+
    "\1\u0179\1\u0117\1\u0113\2\0\14\u0179\3\0\3\u0179\2\0"+
    "\1\u0113\6\u0117\3\0\2\u0114\1\0\1\u0115\2\0\1\u0114"+
    "\20\0\1\u0115\5\0\1\u0114\11\0\2\u0115\1\u017a\2\0"+
    "\1\u017b\1\u0115\26\0\1\u0115\1\u017c\3\u017b\1\u017d\1\u017b"+
    "\3\0\2\u017e\1\0\1\u017f\1\u0116\1\0\1\u017e\2\0"+
    "\14\u0116\2\0\1\u017f\3\u0116\2\0\1\u017e\11\0\2\u0180"+
    "\1\0\1\u0181\1\0\1\u0117\1\u0180\20\0\1\u0181\5\0"+
    "\1\u0180\6\u0117\3\0\2\u0182\1\0\1\u0183\1\0\1\u0118"+
    "\1\u0182\20\0\1\u0183\5\0\1\u0182\6\u0118\3\0\2\u0119"+
    "\2\0\1\u0184\1\u0185\1\u0119\2\0\14\u0184\3\0\3\u0184"+
    "\2\0\1\u0119\6\u0185\3\0\2\u011a\1\0\1\u011b\2\0"+
    "\1\u011a\20\0\1\u011b\5\0\1\u011a\11\0\2\u011b\1\u0186"+
    "\2\0\1\u0187\1\u011b\26\0\1\u011b\1\u0188\3\u0187\1\u0189"+
    "\1\u0187\3\0\2\u011c\1\310\2\0\1\u011d\1\u011c\26\0"+
    "\1\u011c\1\u018a\3\u011d\1\u018b\1\u011d\10\0\1\u018c\30\0"+
    "\6\u018c\3\0\2\u011e\1\0\1\u011f\2\0\1\u011e\20\0"+
    "\1\u011f\5\0\1\u011e\11\0\2\u011f\3\0\1\u018d\1\u011f"+
    "\26\0\1\u011f\6\u018d\3\0\2\u011e\1\0\1\u011f\1\0"+
    "\1\u018e\1\u011e\20\0\1\u011f\5\0\1\u011e\6\u018e\3\0"+
    "\2\u011e\1\0\1\u011f\1\0\1\u018e\1\u011e\20\0\1\u011f"+
    "\5\0\1\u011e\1\u018e\3\312\2\u018e\3\0\2\u011e\1\0"+
    "\1\u011f\1\0\1\312\1\u011e\20\0\1\u011f\5\0\1\u011e"+
    "\6\312\3\0\2\u011e\1\0\1\u011f\1\0\1\u018e\1\u011e"+
    "\20\0\1\u011f\5\0\1\u011e\1\312\4\u018e\1\312\3\0"+
    "\2\u018f\1\0\1\u0190\1\u0124\1\0\1\u018f\2\0\14\u0124"+
    "\2\0\1\u0190\3\u0124\2\0\1\u018f\11\0\2\u0191\1\0"+
    "\1\u0192\1\0\1\u0193\1\u0191\20\0\1\u0192\5\0\1\u0191"+
    "\6\u0193\1\u0194\2\0\2\u0191\1\0\1\u0192\1\0\1\u0193"+
    "\1\u0191\20\0\1\u0192\5\0\1\u0191\1\u0193\1\u0195\1\u0193"+
    "\1\u0196\2\u0193\1\u0194\2\0\2\u0191\1\0\1\u0192\1\0"+
    "\1\u0193\1\u0191\20\0\1\u0192\5\0\1\u0191\5\u0193\1\u0197"+
    "\1\u0194\2\0\2\u0128\1\0\1\u011c\2\0\1\u0128\1\u0129"+
    "\6\0\1\176\10\0\1\u011c\5\0\1\u0128\11\0\2\u0129"+
    "\4\0\2\u0129\6\0\1\176\16\0\1\u0129\11\0\2\u011c"+
    "\1\310\2\0\1\u011d\1\u011c\3\0\1\u0198\15\0\1\u0198"+
    "\4\0\1\u011c\1\u018a\3\u011d\1\u018b\1\u011d\10\0\1\u0199"+
    "\30\0\6\u0199\3\0\2\u012c\1\0\1\u012d\1\0\1\u019a"+
    "\1\u012c\1\u012f\5\0\1\u0130\1\176\10\0\1\u012d\5\0"+
    "\1\u012c\6\u019a\3\0\2\u012d\1\310\1\0\1\230\1\u019b"+
    "\1\u012d\2\0\14\230\3\0\3\230\2\0\1\u012d\1\u019c"+
    "\3\u019b\1\u019d\1\u019b\3\0\2\u019e\1\0\1\u019f\1\0"+
    "\1\u01a0\1\u019e\1\u012f\5\0\1\u0130\1\176\10\0\1\u019f"+
    "\5\0\1\u019e\6\u01a0\3\0\2\u012f\3\0\1\u019a\2\u012f"+
    "\5\0\1\u0130\1\176\16\0\1\u012f\6\u019a\3\0\2\u01a1"+
    "\3\0\1\u01a2\1\u01a1\7\0\1\u01a1\16\0\1\u01a1\6\u01a2"+
    "\3\0\2\u019e\1\0\1\u019f\1\0\1\u01a0\1\u019e\1\u012f"+
    "\5\0\1\u0130\1\176\10\0\1\u019f\5\0\1\u019e\1\u01a0"+
    "\3\324\2\u01a0\3\0\2\u019e\1\0\1\u019f\1\0\1\324"+
    "\1\u019e\1\u012f\5\0\1\u0130\1\176\10\0\1\u019f\5\0"+
    "\1\u019e\6\324\3\0\2\u019e\1\0\1\u019f\1\0\1\u01a0"+
    "\1\u019e\1\u012f\5\0\1\u0130\1\176\10\0\1\u019f\5\0"+
    "\1\u019e\1\324\4\u01a0\1\324\3\0\2\167\1\0\1\170"+
    "\1\64\1\0\1\167\2\0\12\64\1\u01a3\1\64\2\0"+
    "\1\170\3\64\2\0\1\167\11\0\2\u0135\1\323\1\u012d"+
    "\1\102\1\324\1\u0135\1\u012f\1\0\4\102\1\u0137\1\u0138"+
    "\1\102\1\211\4\102\2\0\1\u012d\3\102\2\0\1\u0135"+
    "\1\325\3\324\1\326\1\324\3\0\2\u019e\1\0\1\u019f"+
    "\1\0\1\u012e\1\u019e\1\u012f\5\0\1\u0130\1\176\10\0"+
    "\1\u019f\5\0\1\u019e\6\u012e\3\0\2\u01a4\1\0\1\101"+
    "\1\102\1\u01a2\1\u01a4\2\0\5\102\1\u01a5\6\102\2\0"+
    "\1\101\3\102\2\0\1\u01a4\6\u01a2\3\0\2\100\1\0"+
    "\1\101\1\102\1\0\1\100\2\0\4\102\1\u01a6\7\102"+
    "\2\0\1\101\3\102\2\0\1\100\11\0\2\u019e\1\0"+
    "\1\u019f\1\0\1\u012e\1\u019e\1\u012f\5\0\1\u0130\1\176"+
    "\10\0\1\u019f\5\0\1\u019e\1\u012e\1\u0131\1\u012e\1\u0132"+
    "\2\u012e\3\0\2\u019e\1\0\1\u019f\1\0\1\u012e\1\u019e"+
    "\1\u012f\5\0\1\u0130\1\176\10\0\1\u019f\5\0\1\u019e"+
    "\5\u012e\1\u0133\3\0\2\u019e\1\0\1\u019f\1\0\1\u012e"+
    "\1\u019e\1\u012f\5\0\1\u0130\1\176\10\0\1\u019f\5\0"+
    "\1\u019e\1\u012e\3\u0136\2\u012e\3\0\2\u019e\1\0\1\u019f"+
    "\1\0\1\u0136\1\u019e\1\u012f\5\0\1\u0130\1\176\10\0"+
    "\1\u019f\5\0\1\u019e\6\u0136\3\0\2\u019e\1\0\1\u019f"+
    "\1\0\1\u012e\1\u019e\1\u012f\5\0\1\u0130\1\176\10\0"+
    "\1\u019f\5\0\1\u019e\1\u0136\4\u012e\1\u0136\3\0\2\u01a7"+
    "\1\0\1\u01a8\1\0\1\317\1\u01a7\1\174\5\0\1\175"+
    "\1\176\10\0\1\u01a8\5\0\1\u01a7\6\317\3\0\2\u013f"+
    "\1\0\1\u01a9\2\0\1\u013f\20\0\1\u01a9\5\0\1\u013f"+
    "\11\0\2\u0140\1\0\1\u0141\2\0\1\u0140\20\0\1\u0141"+
    "\5\0\1\u0140\11\0\2\u0141\2\0\1\u01aa\1\u01ab\1\u0141"+
    "\2\0\14\u01aa\3\0\3\u01aa\2\0\1\u0141\6\u01ab\3\0"+
    "\2\103\1\0\1\104\1\0\1\u0142\1\103\20\0\1\104"+
    "\5\0\1\103\6\u0142\3\0\2\u0143\1\0\1\u011b\2\0"+
    "\1\u0143\1\352\6\0\1\353\10\0\1\u011b\5\0\1\u0143"+
    "\11\0\2\u0143\1\0\1\u011b\1\342\1\0\1\u0143\1\352"+
    "\1\0\4\342\1\u01ac\1\u0144\6\342\2\0\1\u011b\3\342"+
    "\2\0\1\u0143\11\0\2\u01ad\1\0\1\u0190\1\u0145\1\0"+
    "\1\u01ad\1\352\1\0\5\u0145\1\u01ae\6\u0145\2\0\1\u0190"+
    "\3\u0145\2\0\1\u01ad\11\0\2\214\1\0\1\215\1\72"+
    "\1\0\1\214\2\0\12\72\1\u01af\1\72\2\0\1\215"+
    "\3\72\2\0\1\214\11\0\2\u01b0\1\0\1\u01b1\1\0"+
    "\1\345\1\u01b0\1\174\5\0\1\175\1\176\10\0\1\u01b1"+
    "\5\0\1\u01b0\6\345\10\0\1\u0149\30\0\6\u0149\10\0"+
    "\1\u01b2\30\0\6\u01b2\10\0\1\u01b2\30\0\1\u01b2\1\u01b3"+
    "\1\u01b2\1\u01b4\2\u01b2\10\0\1\u01b2\30\0\5\u01b2\1\u01b5"+
    "\15\0\1\u01b6\15\0\1\u01b6\16\0\2\350\1\0\1\351"+
    "\1\230\1\0\1\350\1\352\1\0\1\230\1\u01b7\3\230"+
    "\1\354\6\230\2\0\1\351\1\u01b7\2\230\2\0\1\350"+
    "\11\0\2\u014e\1\0\1\u014f\2\0\1\u014e\1\352\6\0"+
    "\1\353\10\0\1\u014f\5\0\1\u014e\11\0\2\u014f\1\u0186"+
    "\2\0\1\u01b8\1\u014f\26\0\1\u014f\1\u01b9\3\u01b8\1\u01ba"+
    "\1\u01b8\3\0\2\u014e\1\0\1\u014f\1\355\1\0\1\u014e"+
    "\1\352\1\0\4\355\1\u01bb\1\u0150\6\355\2\0\1\u014f"+
    "\3\355\2\0\1\u014e\11\0\2\u0151\1\0\1\u0152\2\0"+
    "\1\u0151\20\0\1\u0152\5\0\1\u0151\11\0\2\u0152\2\0"+
    "\1\u01bc\1\u018d\1\u0152\2\0\14\u01bc\3\0\3\u01bc\2\0"+
    "\1\u0152\6\u018d\3\0\2\u0151\1\0\1\u0152\1\0\1\u01bd"+
    "\1\u0151\20\0\1\u0152\5\0\1\u0151\6\u01bd\3\0\2\u0151"+
    "\1\0\1\u0152\1\0\1\u01bd\1\u0151\20\0\1\u0152\5\0"+
    "\1\u0151\1\u01bd\3\356\2\u01bd\3\0\2\u0151\1\0\1\u0152"+
    "\1\0\1\356\1\u0151\20\0\1\u0152\5\0\1\u0151\6\356"+
    "\3\0\2\u0151\1\0\1\u0152\1\0\1\u01bd\1\u0151\20\0"+
    "\1\u0152\5\0\1\u0151\1\356\4\u01bd\1\356\2\0\1\u01be"+
    "\2\u01bf\2\u01be\1\0\1\u01c0\1\u01bf\2\u01be\14\0\3\u01be"+
    "\3\0\2\u01be\1\u01bf\6\u01c0\2\u01be\20\0\1\u01c1\26\0"+
    "\1\u0158\2\u0159\1\u0158\1\u015a\1\u01c2\1\u015c\1\u0159\2\u0158"+
    "\6\u01c2\1\u01c3\5\u01c2\2\u0158\1\u015a\3\u01c2\2\u0158\1\u0159"+
    "\6\u015c\2\u0158\1\0\2\101\3\0\1\227\1\101\10\0"+
    "\1\u01c1\15\0\1\101\6\227\3\0\2\u01c4\1\0\1\u01c5"+
    "\1\u015b\1\u01c2\1\u01c4\2\0\14\u015b\2\0\1\u01c5\3\u015b"+
    "\2\0\1\u01c4\6\u01c2\3\0\2\u01c6\1\0\1\u01c7\2\u01c2"+
    "\1\u01c6\2\0\6\u01c2\1\u01c3\5\u01c2\2\0\1\u01c7\3\u01c2"+
    "\2\0\1\u01c6\6\u01c2\3\0\2\u01c4\1\0\1\u01c5\1\u015b"+
    "\1\u01c2\1\u01c4\2\0\7\u015b\1\u01c8\4\u015b\2\0\1\u01c5"+
    "\3\u015b\2\0\1\u01c4\6\u01c2\2\0\1\u0158\2\u015e\2\u0158"+
    "\1\u01c2\1\u015c\1\u015e\2\u0158\6\u01c2\1\u01c3\5\u01c2\3\u0158"+
    "\3\u01c2\2\u0158\1\u015e\6\u015c\2\u0158\24\0\1\u01c9\23\0"+
    "\2\u01ca\4\0\1\u01ca\26\0\1\u01ca\6\0\1\u01cb\2\0"+
    "\2\u01ca\4\0\1\u01ca\26\0\1\u01ca\1\0\3\376\2\0"+
    "\1\u01cb\2\0\2\u01ca\3\0\1\376\1\u01ca\26\0\1\u01ca"+
    "\6\376\1\u01cb\2\0\2\u01ca\4\0\1\u01ca\26\0\1\u01ca"+
    "\1\376\4\0\1\376\1\u01cb\2\0\2\254\1\375\2\0"+
    "\1\376\1\254\3\0\1\u01cc\15\0\1\u01cc\4\0\1\254"+
    "\1\377\3\376\1\u0100\1\376\3\0\2\u0165\1\0\1\u0166"+
    "\2\0\1\u0165\1\u0167\6\0\1\u0168\10\0\1\u0166\5\0"+
    "\1\u0165\11\0\2\u0166\1\u01cd\2\0\1\u01ce\1\u0166\26\0"+
    "\1\u0166\1\u01cf\3\u01ce\1\u01d0\1\u01ce\3\0\2\u0167\4\0"+
    "\2\u0167\6\0\1\u0168\16\0\1\u0167\26\0\1\u01d1\54\0"+
    "\1\u01d2\30\0\1\u01d3\30\0\6\u01d3\2\0\1\u01d4\2\0"+
    "\32\u01d4\2\0\10\u01d4\1\0\2\u016e\1\u010e\2\0\1\u010f"+
    "\1\u016e\26\0\1\u016e\1\u0111\3\u010f\1\u0112\1\u010f\2\0"+
    "\1\u0172\2\0\32\u0172\2\0\10\u0172\1\0\2\u010b\1\0"+
    "\1\u010c\1\0\1\u0170\1\u010b\20\0\1\u010c\5\0\1\u010b"+
    "\6\u0170\16\0\1\u01d5\33\0\2\141\3\0\1\271\1\141"+
    "\4\0\1\u01d5\21\0\1\141\6\271\3\0\2\140\1\0"+
    "\1\141\1\142\1\0\1\140\2\0\2\142\1\u01d6\11\142"+
    "\2\0\1\141\3\142\2\0\1\140\11\0\2\140\1\0"+
    "\1\141\2\0\1\140\4\0\1\u01d5\13\0\1\141\5\0"+
    "\1\140\50\0\3\u010f\43\0\1\u010f\4\0\1\u010f\3\0"+
    "\2\u01d7\1\0\1\u01d8\1\u0179\1\0\1\u01d7\2\0\14\u0179"+
    "\2\0\1\u01d8\3\u0179\2\0\1\u01d7\16\0\1\u017b\30\0"+
    "\6\u017b\10\0\1\u01d9\30\0\6\u01d9\10\0\1\u01d9\30\0"+
    "\1\u01d9\1\u01da\1\u01d9\1\u01db\2\u01d9\10\0\1\u01d9\30\0"+
    "\5\u01d9\1\u01dc\3\0\2\u017e\1\0\1\u017f\2\0\1\u017e"+
    "\20\0\1\u017f\5\0\1\u017e\11\0\2\u017f\1\u017a\2\0"+
    "\1\u01dd\1\u017f\26\0\1\u017f\1\u01de\3\u01dd\1\u01df\1\u01dd"+
    "\3\0\2\u0180\1\0\1\u0181\2\0\1\u0180\20\0\1\u0181"+
    "\5\0\1\u0180\11\0\2\u0181\2\0\1\u01e0\1\0\1\u0181"+
    "\2\0\14\u01e0\3\0\3\u01e0\2\0\1\u0181\11\0\2\u0182"+
    "\1\0\1\u0183\2\0\1\u0182\20\0\1\u0183\5\0\1\u0182"+
    "\11\0\2\u0183\4\0\1\u0183\6\0\1\u01e1\2\0\1\u01e2"+
    "\1\u01e3\13\0\1\u0183\11\0\2\u01e4\1\0\1\u01e5\1\u0184"+
    "\1\0\1\u01e4\2\0\14\u0184\2\0\1\u01e5\3\u0184\2\0"+
    "\1\u01e4\11\0\2\u01e6\1\0\1\u01e7\1\0\1\u0185\1\u01e6"+
    "\20\0\1\u01e7\5\0\1\u01e6\6\u0185\1\u0194\7\0\1\u0187"+
    "\30\0\6\u0187\10\0\1\u01e8\30\0\6\u01e8\10\0\1\u01e8"+
    "\30\0\1\u01e8\1\u01e9\1\u01e8\1\u01ea\2\u01e8\10\0\1\u01e8"+
    "\30\0\5\u01e8\1\u01eb\10\0\1\u018c\30\0\1\u018c\1\u01ec"+
    "\1\u018c\1\u01ed\2\u018c\10\0\1\u018c\30\0\5\u018c\1\u01ee"+
    "\3\0\2\u011e\1\0\1\u011f\1\0\1\u018d\1\u011e\20\0"+
    "\1\u011f\5\0\1\u011e\6\u018d\3\0\2\u018f\1\0\1\u0190"+
    "\2\0\1\u018f\20\0\1\u0190\5\0\1\u018f\11\0\2\u0190"+
    "\1\u0186\2\0\1\u01ef\1\u0190\26\0\1\u0190\1\u01f0\3\u01ef"+
    "\1\u01f1\1\u01ef\3\0\2\u0191\1\0\1\u0192\2\0\1\u0191"+
    "\20\0\1\u0192\5\0\1\u0191\6\0\1\u0194\2\0\2\u0192"+
    "\2\0\1\u01f2\1\u018d\1\u0192\2\0\4\u01f2\1\u01f3\2\u01f2"+
    "\1\u01f4\1\u01f5\3\u01f2\3\0\3\u01f2\2\0\1\u0192\6\u018d"+
    "\3\0\2\u0191\1\0\1\u0192\1\0\1\u01f6\1\u0191\20\0"+
    "\1\u0192\5\0\1\u0191\6\u01f6\1\u0194\7\0\1\u01f7\30\0"+
    "\6\u01f7\3\0\2\u0191\1\0\1\u0192\1\0\1\u01f6\1\u0191"+
    "\20\0\1\u0192\5\0\1\u0191\1\u01f6\3\u0125\2\u01f6\1\u0194"+
    "\2\0\2\u0191\1\0\1\u0192\1\0\1\u0125\1\u0191\20\0"+
    "\1\u0192\5\0\1\u0191\6\u0125\1\u0194\2\0\2\u0191\1\0"+
    "\1\u0192\1\0\1\u01f6\1\u0191\20\0\1\u0192\5\0\1\u0191"+
    "\1\u0125\4\u01f6\1\u0125\1\u0194\1\0\1\u01f8\2\0\32\u01f8"+
    "\2\0\10\u01f8\1\0\2\u0199\1\0\1\u01f9\2\0\1\u0199"+
    "\20\0\1\u01f9\5\0\1\u0199\11\0\2\u01fa\1\0\1\u011c"+
    "\1\0\1\u019a\1\u01fa\1\u012f\5\0\1\u0130\1\176\10\0"+
    "\1\u011c\5\0\1\u01fa\6\u019a\3\0\2\u01fb\1\0\1\u01fc"+
    "\1\0\1\u01fd\1\u01fb\20\0\1\u01fc\5\0\1\u01fb\6\u01fd"+
    "\3\0\2\u01fb\1\0\1\u01fc\1\0\1\u01fd\1\u01fb\20\0"+
    "\1\u01fc\5\0\1\u01fb\1\u01fd\1\u01fe\1\u01fd\1\u01ff\2\u01fd"+
    "\3\0\2\u01fb\1\0\1\u01fc\1\0\1\u01fd\1\u01fb\20\0"+
    "\1\u01fc\5\0\1\u01fb\5\u01fd\1\u0200\3\0\2\u019e\1\0"+
    "\1\u019f\1\0\1\u019a\1\u019e\1\u012f\5\0\1\u0130\1\176"+
    "\10\0\1\u019f\5\0\1\u019e\6\u019a\3\0\2\u019f\1\310"+
    "\1\0\1\u01aa\1\u0201\1\u019f\2\0\14\u01aa\3\0\3\u01aa"+
    "\2\0\1\u019f\1\u0202\3\u0201\1\u0203\1\u0201\3\0\2\u012c"+
    "\1\0\1\u012d\1\0\1\u01a0\1\u012c\1\u012f\5\0\1\u0130"+
    "\1\176\10\0\1\u012d\5\0\1\u012c\6\u01a0\3\0\2\u01a1"+
    "\3\0\1\u01a2\1\u01a1\26\0\1\u01a1\6\u01a2\3\0\2\u0128"+
    "\1\0\1\u011c\1\0\1\u01a2\1\u0128\1\u0129\6\0\1\176"+
    "\10\0\1\u011c\5\0\1\u0128\6\u01a2\3\0\2\167\1\0"+
    "\1\170\1\64\1\0\1\167\1\0\1\u0204\1\u0205\2\64"+
    "\1\u0205\10\64\2\0\1\170\3\64\2\0\1\167\11\0"+
    "\2\u01a4\1\0\1\101\1\0\1\u01a2\1\u01a4\20\0\1\101"+
    "\5\0\1\u01a4\6\u01a2\3\0\2\u01a4\1\0\1\101\1\102"+
    "\1\u01a2\1\u01a4\2\0\14\102\2\0\1\101\3\102\2\0"+
    "\1\u01a4\6\u01a2\3\0\2\100\1\0\1\101\1\102\1\0"+
    "\1\100\2\0\1\102\1\u0206\12\102\2\0\1\101\1\u0206"+
    "\2\102\2\0\1\100\11\0\2\u01a7\1\0\1\u01a8\1\0"+
    "\1\307\1\u01a7\1\174\5\0\1\175\1\176\10\0\1\u01a8"+
    "\5\0\1\u01a7\6\307\3\0\2\u01a8\1\310\1\0\1\u0207"+
    "\1\u0125\1\u01a8\2\0\14\u0207\3\0\3\u0207\2\0\1\u01a8"+
    "\1\u0126\3\u0125\1\u0127\1\u0125\3\0\2\u01a9\2\0\1\u0208"+
    "\1\u01ab\1\u01a9\2\0\14\u0208\3\0\3\u0208\2\0\1\u01a9"+
    "\6\u01ab\3\0\2\u0209\1\0\1\u020a\1\u01aa\1\0\1\u0209"+
    "\1\352\1\0\5\u01aa\1\u020b\6\u01aa\2\0\1\u020a\3\u01aa"+
    "\2\0\1\u0209\11\0\2\u020c\1\0\1\u020d\1\0\1\u01ab"+
    "\1\u020c\20\0\1\u020d\5\0\1\u020c\6\u01ab\3\0\2\u0143"+
    "\1\0\1\u011b\1\342\1\0\1\u0143\1\352\1\0\1\342"+
    "\1\u020e\3\342\1\u0144\6\342\2\0\1\u011b\1\u020e\2\342"+
    "\2\0\1\u0143\11\0\2\u01ad\1\0\1\u0190\2\0\1\u01ad"+
    "\1\352\6\0\1\353\10\0\1\u0190\5\0\1\u01ad\11\0"+
    "\2\u01ad\1\0\1\u0190\1\u0145\1\0\1\u01ad\1\352\1\0"+
    "\4\u0145\1\u020f\1\u01ae\6\u0145\2\0\1\u0190\3\u0145\2\0"+
    "\1\u01ad\11\0\2\214\1\0\1\215\1\72\1\0\1\214"+
    "\1\0\1\u0204\1\u0210\2\72\1\u0210\10\72\2\0\1\215"+
    "\3\72\2\0\1\214\11\0\2\u01b0\1\0\1\u01b1\1\0"+
    "\1\307\1\u01b0\1\174\5\0\1\175\1\176\10\0\1\u01b1"+
    "\5\0\1\u01b0\6\307\3\0\2\u01b1\1\310\1\0\1\u0211"+
    "\1\u0125\1\u01b1\2\0\14\u0211\3\0\3\u0211\2\0\1\u01b1"+
    "\1\u0126\3\u0125\1\u0127\1\u0125\42\0\3\u0149\43\0\1\u0149"+
    "\4\0\1\u0149\3\0\2\u0212\1\u0213\2\0\1\u0214\1\u0212"+
    "\3\0\1\u0215\15\0\1\u0215\4\0\1\u0212\1\u0216\3\u0214"+
    "\1\u0217\1\u0214\3\0\2\u0218\1\u0213\1\351\1\230\1\u0214"+
    "\1\u0218\1\352\1\0\1\230\1\u0219\3\230\1\354\6\230"+
    "\2\0\1\351\1\u0219\2\230\2\0\1\u0218\1\u0216\3\u0214"+
    "\1\u0217\1\u0214\10\0\1\u021a\30\0\6\u021a\10\0\1\u021a"+
    "\30\0\1\u021a\1\u021b\1\u021a\1\u021c\2\u021a\10\0\1\u021a"+
    "\30\0\5\u021a\1\u021d\3\0\2\u014e\1\0\1\u014f\1\355"+
    "\1\0\1\u014e\1\352\1\0\1\355\1\u021e\3\355\1\u0150"+
    "\6\355\2\0\1\u014f\1\u021e\2\355\2\0\1\u014e\15\0"+
    "\1\u01bc\4\0\14\u01bc\3\0\3\u01bc\33\0\1\u021f\26\0"+
    "\1\u01be\2\u01bf\2\u01be\1\0\1\u01c0\1\u01bf\2\u01be\6\0"+
    "\1\u021f\5\0\3\u01be\3\0\2\u01be\1\u01bf\6\u01c0\2\u01be"+
    "\6\0\1\u0220\11\0\1\u021f\16\0\6\u0220\2\0\5\u0221"+
    "\1\0\4\u0221\6\0\1\u0222\1\0\1\u0223\1\0\1\u0222"+
    "\1\0\3\u0221\3\0\1\u0224\12\u0221\1\0\2\u01c6\1\0"+
    "\1\u01c7\2\u01c2\1\u01c6\2\0\14\u01c2\2\0\1\u01c7\3\u01c2"+
    "\2\0\1\u01c6\6\u01c2\2\0\1\u0221\2\u0225\1\u0221\1\u01c7"+
    "\1\u01c2\2\u0225\2\u0221\6\u01c2\1\u0226\1\u01c2\1\u0227\1\u01c2"+
    "\1\u0226\1\u01c2\2\u0221\1\u01c7\3\u01c2\1\u0224\1\u0221\7\u0225"+
    "\2\u0221\1\0\2\u01c4\1\0\1\u01c5\2\0\1\u01c4\20\0"+
    "\1\u01c5\5\0\1\u01c4\11\0\2\u01c5\2\0\1\u0228\1\u0229"+
    "\1\u01c5\2\0\14\u0228\3\0\3\u0228\2\0\1\u01c5\6\u0229"+
    "\3\0\2\u01c6\1\0\1\u01c7\2\0\1\u01c6\20\0\1\u01c7"+
    "\5\0\1\u01c6\11\0\2\u01c7\2\0\2\u0228\1\u01c7\2\0"+
    "\14\u0228\3\0\3\u0228\2\0\1\u01c7\6\u0228\3\0\2\u01c4"+
    "\1\0\1\u01c5\1\u015b\1\u01c2\1\u01c4\2\0\3\u015b\1\u022a"+
    "\10\u015b\2\0\1\u01c5\3\u015b\2\0\1\u01c4\6\u01c2\13\0"+
    "\2\u022b\2\0\1\u022b\37\0\1\u022c\30\0\6\u022c\2\0"+
    "\1\u022d\2\0\32\u022d\2\0\10\u022d\6\0\1\u01ce\30\0"+
    "\6\u01ce\10\0\1\u022e\30\0\6\u022e\10\0\1\u022e\30\0"+
    "\1\u022e\1\u022f\1\u022e\1\u0230\2\u022e\10\0\1\u022e\30\0"+
    "\5\u022e\1\u0231\15\0\1\u0232\15\0\1\u0232\26\0\2\u0233"+
    "\2\0\1\u0233\37\0\1\u01d3\30\0\6\u01d3\1\0\1\u0234"+
    "\14\0\1\u0235\52\0\1\u0236\27\0\2\140\1\0\1\141"+
    "\1\142\1\0\1\140\2\0\6\142\1\u0237\5\142\2\0"+
    "\1\141\3\142\2\0\1\140\11\0\2\u01d7\1\0\1\u01d8"+
    "\2\0\1\u01d7\20\0\1\u01d8\5\0\1\u01d7\11\0\2\u01d8"+
    "\3\0\1\u0238\1\u01d8\26\0\1\u01d8\6\u0238\42\0\3\u017b"+
    "\43\0\1\u017b\4\0\1\u017b\10\0\1\u0239\30\0\6\u0239"+
    "\10\0\1\u0239\30\0\1\u0239\1\u023a\1\u0239\1\u023b\2\u0239"+
    "\10\0\1\u0239\30\0\5\u0239\1\u023c\7\0\1\u01e0\4\0"+
    "\14\u01e0\3\0\3\u01e0\35\0\1\u023d\42\0\1\u023e\46\0"+
    "\1\u023f\31\0\2\u01e4\1\0\1\u01e5\2\0\1\u01e4\20\0"+
    "\1\u01e5\5\0\1\u01e4\11\0\2\u01e5\3\0\1\u0240\1\u01e5"+
    "\26\0\1\u01e5\6\u0240\3\0\2\u01e6\1\0\1\u01e7\2\0"+
    "\1\u01e6\20\0\1\u01e7\5\0\1\u01e6\6\0\1\u0194\2\0"+
    "\2\u01e7\2\0\1\u01f2\1\0\1\u01e7\2\0\4\u01f2\1\u01f3"+
    "\2\u01f2\1\u01f4\1\u01f5\3\u01f2\3\0\3\u01f2\2\0\1\u01e7"+
    "\50\0\3\u0187\43\0\1\u0187\4\0\1\u0187\42\0\3\u011d"+
    "\43\0\1\u011d\4\0\1\u011d\10\0\1\u0241\30\0\6\u0241"+
    "\10\0\1\u0241\30\0\1\u0241\1\u0242\1\u0241\1\u0243\2\u0241"+
    "\10\0\1\u0241\30\0\5\u0241\1\u0244\7\0\1\u01f2\4\0"+
    "\14\u01f2\3\0\3\u01f2\20\0\1\u01f2\4\0\10\u01f2\1\u0245"+
    "\3\u01f2\3\0\3\u01f2\20\0\1\u01f2\4\0\4\u01f2\1\u0246"+
    "\7\u01f2\3\0\3\u01f2\20\0\1\u01f2\4\0\4\u01f2\1\u0247"+
    "\7\u01f2\3\0\3\u01f2\21\0\1\u01f7\30\0\6\u01f7\1\0"+
    "\1\u0248\14\0\1\u0249\33\0\2\u01f9\2\0\1\u0208\1\u024a"+
    "\1\u01f9\2\0\14\u0208\3\0\3\u0208\2\0\1\u01f9\6\u024a"+
    "\3\0\2\u01fb\1\0\1\u01fc\2\0\1\u01fb\20\0\1\u01fc"+
    "\5\0\1\u01fb\11\0\2\u01fc\3\0\1\u024b\1\u01fc\26\0"+
    "\1\u01fc\6\u024b\3\0\2\u01fb\1\0\1\u01fc\1\0\1\u024c"+
    "\1\u01fb\20\0\1\u01fc\5\0\1\u01fb\6\u024c\3\0\2\u01fb"+
    "\1\0\1\u01fc\1\0\1\u024c\1\u01fb\20\0\1\u01fc\5\0"+
    "\1\u01fb\1\u024c\3\u019b\2\u024c\3\0\2\u01fb\1\0\1\u01fc"+
    "\1\0\1\u019b\1\u01fb\20\0\1\u01fc\5\0\1\u01fb\6\u019b"+
    "\3\0\2\u01fb\1\0\1\u01fc\1\0\1\u024c\1\u01fb\20\0"+
    "\1\u01fc\5\0\1\u01fb\1\u019b\4\u024c\1\u019b\3\0\2\u024d"+
    "\1\0\1\u024e\1\0\1\u024f\1\u024d\20\0\1\u024e\5\0"+
    "\1\u024d\6\u024f\1\u0250\2\0\2\u024d\1\0\1\u024e\1\0"+
    "\1\u024f\1\u024d\20\0\1\u024e\5\0\1\u024d\1\u024f\1\u0251"+
    "\1\u024f\1\u0252\2\u024f\1\u0250\2\0\2\u024d\1\0\1\u024e"+
    "\1\0\1\u024f\1\u024d\20\0\1\u024e\5\0\1\u024d\5\u024f"+
    "\1\u0253\1\u0250\1\0\5\177\1\0\4\177\14\0\3\177"+
    "\3\0\14\177\2\200\2\177\1\64\1\177\1\200\2\177"+
    "\14\64\3\177\3\64\2\177\1\200\10\177\1\0\2\u0254"+
    "\1\310\1\101\1\102\1\u011d\1\u0254\2\0\1\102\1\u0255"+
    "\12\102\2\0\1\101\1\u0255\2\102\2\0\1\u0254\1\u018a"+
    "\3\u011d\1\u018b\1\u011d\3\0\2\u0256\1\0\1\u0257\1\u0207"+
    "\1\0\1\u0256\2\0\14\u0207\2\0\1\u0257\3\u0207\2\0"+
    "\1\u0256\11\0\2\u0258\1\0\1\u0259\1\u0208\1\0\1\u0258"+
    "\2\0\14\u0208\2\0\1\u0259\3\u0208\2\0\1\u0258\11\0"+
    "\2\u0209\1\0\1\u020a\2\0\1\u0209\1\352\6\0\1\353"+
    "\10\0\1\u020a\5\0\1\u0209\11\0\2\u020a\1\u0148\2\0"+
    "\1\u025a\1\u020a\26\0\1\u020a\6\u025a\3\0\2\u0209\1\0"+
    "\1\u020a\1\u01aa\1\0\1\u0209\1\352\1\0\4\u01aa\1\u025b"+
    "\1\u020b\6\u01aa\2\0\1\u020a\3\u01aa\2\0\1\u0209\11\0"+
    "\2\u020c\1\0\1\u020d\2\0\1\u020c\20\0\1\u020d\5\0"+
    "\1\u020c\11\0\2\u020d\2\0\1\u01bc\1\0\1\u020d\2\0"+
    "\14\u01bc\3\0\3\u01bc\2\0\1\u020d\11\0\2\u025c\1\u0213"+
    "\1\u011b\1\342\1\u0214\1\u025c\1\352\1\0\1\342\1\u025d"+
    "\3\342\1\u0144\6\342\2\0\1\u011b\1\u025d\2\342\2\0"+
    "\1\u025c\1\u0216\3\u0214\1\u0217\1\u0214\3\0\2\u01ad\1\0"+
    "\1\u0190\1\u0145\1\0\1\u01ad\1\352\1\0\1\u0145\1\u025e"+
    "\3\u0145\1\u01ae\6\u0145\2\0\1\u0190\1\u025e\2\u0145\2\0"+
    "\1\u01ad\10\0\1\177\2\221\2\177\1\72\1\177\1\221"+
    "\2\177\14\72\3\177\3\72\2\177\1\221\10\177\1\0"+
    "\2\u025f\1\0\1\u0257\1\u0211\1\0\1\u025f\1\352\1\0"+
    "\5\u0211\1\u0260\6\u0211\2\0\1\u0257\3\u0211\2\0\1\u025f"+
    "\11\0\2\u0212\1\u0213\2\0\1\u0214\1\u0212\26\0\1\u0212"+
    "\1\u0216\3\u0214\1\u0217\1\u0214\10\0\1\u0214\30\0\6\u0214"+
    "\10\0\1\u0261\30\0\6\u0261\2\0\1\u0262\2\0\32\u0262"+
    "\2\0\10\u0262\6\0\1\u0261\30\0\1\u0261\1\u0263\1\u0261"+
    "\1\u0264\2\u0261\10\0\1\u0261\30\0\5\u0261\1\u0265\3\0"+
    "\2\u0218\1\u0213\1\351\1\0\1\u0214\1\u0218\1\352\6\0"+
    "\1\353\10\0\1\351\5\0\1\u0218\1\u0216\3\u0214\1\u0217"+
    "\1\u0214\2\0\1\u0262\2\350\1\u0262\1\u0266\1\u0267\1\u0262"+
    "\1\u0268\1\u0269\1\u0262\5\u0267\1\u026a\6\u0267\2\u0262\1\u0266"+
    "\3\u0267\1\u0262\1\0\1\350\10\u0262\6\0\1\u025a\30\0"+
    "\6\u025a\10\0\1\u025a\30\0\1\u025a\3\u01b8\2\u025a\10\0"+
    "\1\u01b8\30\0\6\u01b8\10\0\1\u025a\30\0\1\u01b8\4\u025a"+
    "\1\u01b8\3\0\2\u026b\1\u0213\1\u014f\1\355\1\u0214\1\u026b"+
    "\1\352\1\0\1\355\1\u026c\3\355\1\u0150\6\355\2\0"+
    "\1\u014f\1\u026c\2\355\2\0\1\u026b\1\u0216\3\u0214\1\u0217"+
    "\1\u0214\2\0\5\u026d\1\0\4\u026d\6\0\1\u026e\1\0"+
    "\1\u026f\1\0\1\u026e\1\0\3\u026d\3\0\1\u0270\12\u026d"+
    "\6\0\1\u0220\30\0\6\u0220\3\0\2\u0221\2\0\2\u01c2"+
    "\1\u0221\2\0\14\u01c2\3\0\3\u01c2\2\0\1\u0221\6\u01c2"+
    "\2\0\5\u0221\1\0\4\u0221\14\0\3\u0221\3\0\1\u0224"+
    "\12\u0221\33\0\1\u0271\13\0\5\u0221\1\u01c2\1\u0225\3\u0221"+
    "\14\u01c2\3\u0221\3\u01c2\3\u0221\6\u0225\2\u0221\1\0\2\u0225"+
    "\1\0\1\u01c7\2\u01c2\1\u0225\2\0\14\u01c2\2\0\1\u01c7"+
    "\3\u01c2\2\0\1\u0225\6\u01c2\2\0\1\u0221\2\u0225\1\u0221"+
    "\1\u01c7\1\u01c2\2\u0225\2\u0221\14\u01c2\2\u0221\1\u01c7\3\u01c2"+
    "\1\u0224\1\u0221\7\u0225\2\u0221\1\0\2\u01c6\1\0\1\u01c7"+
    "\2\u01c2\1\u01c6\2\0\14\u01c2\2\0\1\u01c7\2\u01c2\1\u0272"+
    "\2\0\1\u01c6\6\u01c2\3\0\2\u0273\1\0\1\u01c7\2\u0228"+
    "\1\u0273\1\352\1\0\5\u0228\1\u0274\6\u0228\2\0\1\u01c7"+
    "\3\u0228\2\0\1\u0273\6\u0228\3\0\2\u0275\1\0\1\u0276"+
    "\1\u0228\1\u0229\1\u0275\1\352\1\0\5\u0228\1\u0274\6\u0228"+
    "\2\0\1\u0276\3\u0228\2\0\1\u0275\6\u0229\3\0\2\u01c4"+
    "\1\0\1\u01c5\1\u015b\1\u01c2\1\u01c4\2\0\1\u015b\1\u0277"+
    "\12\u015b\2\0\1\u01c5\1\u0277\2\u015b\2\0\1\u01c4\6\u01c2"+
    "\2\0\5\247\1\0\4\247\14\0\3\247\3\0\13\247"+
    "\6\0\1\u022c\30\0\6\u022c\1\0\1\u0278\14\0\1\u0279"+
    "\33\0\2\u027a\4\0\1\u027a\26\0\1\u027a\6\0\1\u027b"+
    "\2\0\2\u027a\4\0\1\u027a\26\0\1\u027a\1\0\3\u01ce"+
    "\2\0\1\u027b\2\0\2\u027a\3\0\1\u01ce\1\u027a\26\0"+
    "\1\u027a\6\u01ce\1\u027b\2\0\2\u027a\4\0\1\u027a\26\0"+
    "\1\u027a\1\u01ce\4\0\1\u01ce\1\u027b\2\0\2\u0166\1\u01cd"+
    "\2\0\1\u01ce\1\u0166\3\0\1\u027c\15\0\1\u027c\4\0"+
    "\1\u0166\1\u01cf\3\u01ce\1\u01d0\1\u01ce\2\0\5\257\1\0"+
    "\4\257\14\0\3\257\3\0\13\257\20\0\1\u027d\46\0"+
    "\1\u027e\27\0\2\140\1\0\1\141\1\142\1\0\1\140"+
    "\2\0\6\142\1\u027f\5\142\2\0\1\141\3\142\2\0"+
    "\1\140\16\0\1\u0238\30\0\6\u0238\10\0\1\u0238\30\0"+
    "\1\u0238\3\u01dd\2\u0238\10\0\1\u01dd\30\0\6\u01dd\10\0"+
    "\1\u0238\30\0\1\u01dd\4\u0238\1\u01dd\26\0\1\u0280\23\0"+
    "\2\u0281\1\0\1\u0282\2\0\1\u0281\6\0\1\u023f\2\0"+
    "\1\u0283\6\0\1\u0282\5\0\1\u0281\11\0\2\u0281\1\0"+
    "\1\u0282\2\0\1\u0281\20\0\1\u0282\5\0\1\u0281\16\0"+
    "\1\u0240\30\0\6\u0240\10\0\1\u0240\30\0\1\u0240\3\u01ef"+
    "\2\u0240\10\0\1\u01ef\30\0\6\u01ef\10\0\1\u0240\30\0"+
    "\1\u01ef\4\u0240\1\u01ef\7\0\1\u01f2\4\0\12\u01f2\1\u0284"+
    "\1\u01f2\3\0\3\u01f2\14\0\2\u0285\1\0\1\u0286\1\u01f2"+
    "\1\0\1\u0285\2\0\4\u01f2\1\u0247\2\u01f2\1\u0287\4\u01f2"+
    "\2\0\1\u0286\3\u01f2\2\0\1\u0285\11\0\2\u0285\1\0"+
    "\1\u0286\1\u01f2\1\0\1\u0285\2\0\14\u01f2\2\0\1\u0286"+
    "\3\u01f2\2\0\1\u0285\30\0\1\u0288\27\0\2\u0289\1\0"+
    "\1\u028a\1\0\1\u024a\1\u0289\20\0\1\u028a\5\0\1\u0289"+
    "\6\u024a\1\u0250\2\0\2\u028b\1\0\1\u01fc\1\0\1\u024b"+
    "\1\u028b\1\352\6\0\1\353\10\0\1\u01fc\5\0\1\u028b"+
    "\6\u024b\3\0\2\u024d\1\0\1\u024e\2\0\1\u024d\20\0"+
    "\1\u024e\5\0\1\u024d\6\0\1\u0250\2\0\2\u024e\2\0"+
    "\1\u01bc\1\u024b\1\u024e\2\0\4\u01bc\1\u028c\2\u01bc\1\u028d"+
    "\1\u028e\3\u01bc\3\0\3\u01bc\2\0\1\u024e\6\u024b\3\0"+
    "\2\u024d\1\0\1\u024e\1\0\1\u028f\1\u024d\20\0\1\u024e"+
    "\5\0\1\u024d\6\u028f\1\u0250\7\0\1\u0290\30\0\6\u0290"+
    "\3\0\2\u024d\1\0\1\u024e\1\0\1\u028f\1\u024d\20\0"+
    "\1\u024e\5\0\1\u024d\1\u028f\3\u0201\2\u028f\1\u0250\2\0"+
    "\2\u024d\1\0\1\u024e\1\0\1\u0201\1\u024d\20\0\1\u024e"+
    "\5\0\1\u024d\6\u0201\1\u0250\2\0\2\u024d\1\0\1\u024e"+
    "\1\0\1\u028f\1\u024d\20\0\1\u024e\5\0\1\u024d\1\u0201"+
    "\4\u028f\1\u0201\1\u0250\2\0\2\u0254\1\310\1\101\1\0"+
    "\1\u011d\1\u0254\20\0\1\101\5\0\1\u0254\1\u018a\3\u011d"+
    "\1\u018b\1\u011d\2\0\1\u01f8\2\100\1\u01f8\1\u0291\1\u0292"+
    "\1\u01f8\1\u0293\2\u01f8\14\u0292\2\u01f8\1\u0291\3\u0292\1\u01f8"+
    "\1\0\1\100\10\u01f8\1\0\2\u0256\1\0\1\u0257\2\0"+
    "\1\u0256\20\0\1\u0257\5\0\1\u0256\11\0\2\u0257\1\u0186"+
    "\2\0\1\u0240\1\u0257\26\0\1\u0257\1\u0294\3\u0240\1\u0295"+
    "\1\u0240\3\0\2\u0258\1\0\1\u0259\2\0\1\u0258\20\0"+
    "\1\u0259\5\0\1\u0258\11\0\2\u0259\3\0\1\u025a\1\u0259"+
    "\26\0\1\u0259\6\u025a\3\0\2\u0209\1\0\1\u020a\1\u01aa"+
    "\1\0\1\u0209\1\352\1\0\1\u01aa\1\u0296\3\u01aa\1\u020b"+
    "\6\u01aa\2\0\1\u020a\1\u0296\2\u01aa\2\0\1\u0209\11\0"+
    "\2\u025c\1\u0213\1\u011b\1\0\1\u0214\1\u025c\1\352\6\0"+
    "\1\353\10\0\1\u011b\5\0\1\u025c\1\u0216\3\u0214\1\u0217"+
    "\1\u0214\2\0\1\u0262\2\u0143\1\u0262\1\u0297\1\u0298\1\u0262"+
    "\1\u0299\1\u0269\1\u0262\5\u0298\1\u029a\6\u0298\2\u0262\1\u0297"+
    "\3\u0298\1\u0262\1\0\1\u0143\10\u0262\1\0\2\u029b\1\u0213"+
    "\1\u0190\1\u0145\1\u0214\1\u029b\1\352\1\0\1\u0145\1\u029c"+
    "\3\u0145\1\u01ae\6\u0145\2\0\1\u0190\1\u029c\2\u0145\2\0"+
    "\1\u029b\1\u0216\3\u0214\1\u0217\1\u0214\3\0\2\u025f\1\0"+
    "\1\u0257\2\0\1\u025f\1\352\6\0\1\353\10\0\1\u0257"+
    "\5\0\1\u025f\11\0\2\u025f\1\0\1\u0257\1\u0211\1\0"+
    "\1\u025f\1\352\1\0\4\u0211\1\u029d\1\u0260\6\u0211\2\0"+
    "\1\u0257\3\u0211\2\0\1\u025f\24\0\1\u029e\72\0\3\u0214"+
    "\43\0\1\u0214\4\0\1\u0214\3\0\2\351\1\u0148\2\0"+
    "\1\u0149\1\351\4\0\1\u029e\21\0\1\351\1\u014a\3\u0149"+
    "\1\u014b\1\u0149\3\0\2\350\1\0\1\351\1\230\1\0"+
    "\1\350\1\352\1\0\2\230\1\u029f\2\230\1\354\6\230"+
    "\2\0\1\351\3\230\2\0\1\350\11\0\2\350\1\0"+
    "\1\351\2\0\1\350\1\352\3\0\1\u029e\2\0\1\353"+
    "\10\0\1\351\5\0\1\350\11\0\2\352\4\0\2\352"+
    "\3\0\1\u029e\2\0\1\353\16\0\1\352\11\0\2\350"+
    "\1\0\1\351\1\230\1\0\1\350\1\352\1\0\2\230"+
    "\1\u029f\1\230\1\u014d\1\354\6\230\2\0\1\351\3\230"+
    "\2\0\1\350\11\0\2\u026b\1\u0213\1\u014f\1\0\1\u0214"+
    "\1\u026b\1\352\6\0\1\353\10\0\1\u014f\5\0\1\u026b"+
    "\1\u0216\3\u0214\1\u0217\1\u0214\2\0\1\u0262\2\u014e\1\u0262"+
    "\1\u02a0\1\u02a1\1\u0262\1\u02a2\1\u0269\1\u0262\5\u02a1\1\u02a3"+
    "\6\u02a1\2\u0262\1\u02a0\3\u02a1\1\u0262\1\0\1\u014e\10\u0262"+
    "\1\0\2\u026d\3\0\1\u0220\1\u026d\26\0\1\u026d\6\u0220"+
    "\2\0\5\u026d\1\0\4\u026d\14\0\3\u026d\3\0\1\u0270"+
    "\12\u026d\33\0\1\u02a4\13\0\5\u026d\1\0\1\u02a5\3\u026d"+
    "\14\0\3\u026d\3\0\3\u026d\6\u02a5\2\u026d\5\u0221\1\0"+
    "\4\u0221\4\0\1\u02a6\7\0\3\u0221\3\0\1\u0224\13\u0221"+
    "\2\u0225\1\u0221\1\u01c7\1\u01c2\2\u0225\2\u0221\4\u01c2\1\u02a7"+
    "\7\u01c2\2\u0221\1\u01c7\3\u01c2\1\u0224\1\u0221\7\u0225\2\u0221"+
    "\1\0\2\u0273\1\0\1\u01c7\2\0\1\u0273\1\352\6\0"+
    "\1\353\10\0\1\u01c7\5\0\1\u0273\11\0\2\u0273\1\0"+
    "\1\u01c7\2\u0228\1\u0273\1\352\1\0\4\u0228\1\u02a8\1\u0274"+
    "\6\u0228\2\0\1\u01c7\3\u0228\2\0\1\u0273\6\u0228\3\0"+
    "\2\u0275\1\0\1\u0276\2\0\1\u0275\1\352\6\0\1\353"+
    "\10\0\1\u0276\5\0\1\u0275\11\0\2\u0276\1\u0148\1\0"+
    "\2\u0228\1\u0276\2\0\14\u0228\3\0\3\u0228\2\0\1\u0276"+
    "\6\u0228\3\0\2\u01c4\1\0\1\u01c5\1\u015b\1\u01c2\1\u01c4"+
    "\2\0\1\u015b\1\u02a9\12\u015b\2\0\1\u01c5\1\u02a9\2\u015b"+
    "\2\0\1\u01c4\6\u01c2\22\0\1\u02aa\34\0\1\u02ab\30\0"+
    "\6\u02ab\2\0\1\u02ac\2\0\32\u02ac\2\0\10\u02ac\20\0"+
    "\1\u02ad\43\0\1\u016e\32\0\2\140\1\0\1\141\1\142"+
    "\1\0\1\140\2\0\3\142\1\u02ae\10\142\2\0\1\141"+
    "\3\142\2\0\1\140\24\0\1\u02af\33\0\2\u0282\4\0"+
    "\1\u0282\6\0\1\u02b0\2\0\1\u02b1\1\u02b2\13\0\1\u0282"+
    "\24\0\1\u023f\37\0\1\u01f2\4\0\2\u01f2\1\u02b3\11\u01f2"+
    "\3\0\3\u01f2\14\0\2\u0285\1\0\1\u0286\2\0\1\u0285"+
    "\20\0\1\u0286\5\0\1\u0285\11\0\2\u0286\4\0\1\u0286"+
    "\6\0\1\u02b4\2\0\1\u02b5\1\u02b6\13\0\1\u0286\15\0"+
    "\1\u01f2\4\0\2\u01f2\1\u0247\11\u01f2\3\0\3\u01f2\33\0"+
    "\1\u02b7\27\0\2\u0289\1\0\1\u028a\2\0\1\u0289\20\0"+
    "\1\u028a\5\0\1\u0289\6\0\1\u0250\2\0\2\u028a\2\0"+
    "\1\u01bc\1\0\1\u028a\2\0\4\u01bc\1\u028c\2\u01bc\1\u028d"+
    "\1\u028e\3\u01bc\3\0\3\u01bc\2\0\1\u028a\11\0\2\u028b"+
    "\1\0\1\u01fc\2\0\1\u028b\1\352\6\0\1\353\10\0"+
    "\1\u01fc\5\0\1\u028b\15\0\1\u01bc\4\0\10\u01bc\1\u02b8"+
    "\3\u01bc\3\0\3\u01bc\20\0\1\u01bc\4\0\4\u01bc\1\u02b9"+
    "\7\u01bc\3\0\3\u01bc\20\0\1\u01bc\4\0\4\u01bc\1\u02ba"+
    "\7\u01bc\3\0\3\u01bc\21\0\1\u0290\30\0\6\u0290\1\0"+
    "\1\u02bb\1\0\2\101\3\0\1\227\1\101\4\0\1\u0249"+
    "\21\0\1\101\6\227\3\0\2\100\1\0\1\101\1\102"+
    "\1\0\1\100\2\0\2\102\1\u02bc\11\102\2\0\1\101"+
    "\3\102\2\0\1\100\11\0\2\100\1\0\1\101\2\0"+
    "\1\100\4\0\1\u0249\13\0\1\101\5\0\1\100\16\0"+
    "\1\u0240\30\0\1\u0240\1\u02bd\1\u0240\1\u02be\2\u0240\10\0"+
    "\1\u0240\30\0\5\u0240\1\u02bf\3\0\2\u02c0\1\u0213\1\u020a"+
    "\1\u01aa\1\u0214\1\u02c0\1\352\1\0\1\u01aa\1\u02c1\3\u01aa"+
    "\1\u020b\6\u01aa\2\0\1\u020a\1\u02c1\2\u01aa\2\0\1\u02c0"+
    "\1\u0216\3\u0214\1\u0217\1\u0214\3\0\2\u011b\1\u0186\2\0"+
    "\1\u0187\1\u011b\4\0\1\u029e\21\0\1\u011b\1\u0188\3\u0187"+
    "\1\u0189\1\u0187\3\0\2\u0143\1\0\1\u011b\1\342\1\0"+
    "\1\u0143\1\352\1\0\2\342\1\u02c2\2\342\1\u0144\6\342"+
    "\2\0\1\u011b\3\342\2\0\1\u0143\11\0\2\u0143\1\0"+
    "\1\u011b\2\0\1\u0143\1\352\3\0\1\u029e\2\0\1\353"+
    "\10\0\1\u011b\5\0\1\u0143\11\0\2\u0143\1\0\1\u011b"+
    "\1\342\1\0\1\u0143\1\352\1\0\2\342\1\u02c2\1\342"+
    "\1\u01ac\1\u0144\6\342\2\0\1\u011b\3\342\2\0\1\u0143"+
    "\11\0\2\u029b\1\u0213\1\u0190\1\0\1\u0214\1\u029b\1\352"+
    "\6\0\1\353\10\0\1\u0190\5\0\1\u029b\1\u0216\3\u0214"+
    "\1\u0217\1\u0214\2\0\1\u0262\2\u01ad\1\u0262\1\u02c3\1\u02c4"+
    "\1\u0262\1\u02c5\1\u0269\1\u0262\5\u02c4\1\u02c6\6\u02c4\2\u0262"+
    "\1\u02c3\3\u02c4\1\u0262\1\0\1\u01ad\10\u0262\1\0\2\u025f"+
    "\1\0\1\u0257\1\u0211\1\0\1\u025f\1\352\1\0\1\u0211"+
    "\1\u02c7\3\u0211\1\u0260\6\u0211\2\0\1\u0257\1\u02c7\2\u0211"+
    "\2\0\1\u025f\30\0\1\u02c8\27\0\2\350\1\0\1\351"+
    "\1\230\1\0\1\350\1\352\1\0\5\230\1\354\1\u02c9"+
    "\5\230\2\0\1\351\3\230\2\0\1\350\11\0\2\u014f"+
    "\1\u0186\2\0\1\u01b8\1\u014f\4\0\1\u029e\21\0\1\u014f"+
    "\1\u01b9\3\u01b8\1\u01ba\1\u01b8\3\0\2\u014e\1\0\1\u014f"+
    "\1\355\1\0\1\u014e\1\352\1\0\2\355\1\u02ca\2\355"+
    "\1\u0150\6\355\2\0\1\u014f\3\355\2\0\1\u014e\11\0"+
    "\2\u014e\1\0\1\u014f\2\0\1\u014e\1\352\3\0\1\u029e"+
    "\2\0\1\353\10\0\1\u014f\5\0\1\u014e\11\0\2\u014e"+
    "\1\0\1\u014f\1\355\1\0\1\u014e\1\352\1\0\2\355"+
    "\1\u02ca\1\355\1\u01bb\1\u0150\6\355\2\0\1\u014f\3\355"+
    "\2\0\1\u014e\10\0\5\u026d\1\0\4\u026d\4\0\1\u02cb"+
    "\7\0\3\u026d\3\0\1\u0270\12\u026d\24\0\1\u02cc\23\0"+
    "\2\u01c6\1\0\1\u01c7\2\u01c2\1\u01c6\2\0\12\u01c2\1\u02cd"+
    "\1\u01c2\2\0\1\u01c7\3\u01c2\2\0\1\u01c6\6\u01c2\3\0"+
    "\2\u0273\1\0\1\u01c7\2\u0228\1\u0273\1\352\1\0\1\u0228"+
    "\1\u02ce\3\u0228\1\u0274\6\u0228\2\0\1\u01c7\1\u02ce\2\u0228"+
    "\2\0\1\u0273\6\u0228\3\0\2\u01c4\1\0\1\u01c5\1\u015b"+
    "\1\u01c2\1\u01c4\2\0\3\u015b\1\u02cf\10\u015b\2\0\1\u01c5"+
    "\3\u015b\2\0\1\u01c4\6\u01c2\22\0\1\u02d0\34\0\1\u02ab"+
    "\30\0\6\u02ab\1\0\1\u02d1\14\0\1\u02d2\47\0\1\133"+
    "\32\0\2\u010d\1\u010e\1\141\1\142\1\u010f\1\u010d\2\0"+
    "\14\142\2\0\1\141\3\142\2\0\1\u010d\1\u0111\3\u010f"+
    "\1\u0112\1\u010f\27\0\1\u02d3\43\0\1\u02d4\42\0\1\u02d5"+
    "\46\0\1\u02d6\35\0\1\u01f2\4\0\13\u01f2\1\u02d7\3\0"+
    "\3\u01f2\35\0\1\u02d8\42\0\1\u02d9\46\0\1\u02da\45\0"+
    "\1\u011c\36\0\1\u01bc\4\0\12\u01bc\1\u02db\1\u01bc\3\0"+
    "\3\u01bc\14\0\2\u02dc\1\0\1\u02dd\1\u01bc\1\0\1\u02dc"+
    "\2\0\4\u01bc\1\u02ba\2\u01bc\1\u02de\4\u01bc\2\0\1\u02dd"+
    "\3\u01bc\2\0\1\u02dc\11\0\2\u02dc\1\0\1\u02dd\1\u01bc"+
    "\1\0\1\u02dc\2\0\14\u01bc\2\0\1\u02dd\3\u01bc\2\0"+
    "\1\u02dc\11\0\2\100\1\0\1\101\1\102\1\0\1\100"+
    "\2\0\6\102\1\u02df\5\102\2\0\1\101\3\102\2\0"+
    "\1\100\11\0\2\u02c0\1\u0213\1\u020a\1\0\1\u0214\1\u02c0"+
    "\1\352\6\0\1\353\10\0\1\u020a\5\0\1\u02c0\1\u0216"+
    "\3\u0214\1\u0217\1\u0214\2\0\1\u0262\2\u0209\1\u0262\1\u02e0"+
    "\1\u02e1\1\u0262\1\u02e2\1\u0269\1\u0262\5\u02e1\1\u02e3\6\u02e1"+
    "\2\u0262\1\u02e0\3\u02e1\1\u0262\1\0\1\u0209\10\u0262\1\0"+
    "\2\u0143\1\0\1\u011b\1\342\1\0\1\u0143\1\352\1\0"+
    "\5\342\1\u0144\1\u02e4\5\342\2\0\1\u011b\3\342\2\0"+
    "\1\u0143\11\0\2\u0190\1\u0186\2\0\1\u01ef\1\u0190\4\0"+
    "\1\u029e\21\0\1\u0190\1\u01f0\3\u01ef\1\u01f1\1\u01ef\3\0"+
    "\2\u01ad\1\0\1\u0190\1\u0145\1\0\1\u01ad\1\352\1\0"+
    "\2\u0145\1\u02e5\2\u0145\1\u01ae\6\u0145\2\0\1\u0190\3\u0145"+
    "\2\0\1\u01ad\11\0\2\u01ad\1\0\1\u0190\2\0\1\u01ad"+
    "\1\352\3\0\1\u029e\2\0\1\353\10\0\1\u0190\5\0"+
    "\1\u01ad\11\0\2\u01ad\1\0\1\u0190\1\u0145\1\0\1\u01ad"+
    "\1\352\1\0\2\u0145\1\u02e5\1\u0145\1\u020f\1\u01ae\6\u0145"+
    "\2\0\1\u0190\3\u0145\2\0\1\u01ad\11\0\2\u02e6\1\u0213"+
    "\1\u0257\1\u0211\1\u0214\1\u02e6\1\352\1\0\1\u0211\1\u02e7"+
    "\3\u0211\1\u0260\6\u0211\2\0\1\u0257\1\u02e7\2\u0211\2\0"+
    "\1\u02e6\1\u0216\3\u0214\1\u0217\1\u0214\22\0\1\u02e8\27\0"+
    "\2\350\1\0\1\351\1\230\1\0\1\350\1\352\1\0"+
    "\5\230\1\354\1\u02e9\5\230\2\0\1\351\3\230\2\0"+
    "\1\350\11\0\2\u014e\1\0\1\u014f\1\355\1\0\1\u014e"+
    "\1\352\1\0\5\355\1\u0150\1\u02ea\5\355\2\0\1\u014f"+
    "\3\355\2\0\1\u014e\34\0\1\u02eb\33\0\2\u02ec\2\0"+
    "\1\u02ec\32\0\2\u01c6\1\0\1\u01c7\2\u01c2\1\u01c6\1\0"+
    "\1\u02ec\1\u02ed\2\u01c2\1\u02ed\10\u01c2\2\0\1\u01c7\3\u01c2"+
    "\2\0\1\u01c6\6\u01c2\3\0\2\u02ee\1\u0213\1\u01c7\2\u0228"+
    "\1\u02ee\1\352\1\0\1\u0228\1\u02ef\3\u0228\1\u0274\6\u0228"+
    "\2\0\1\u01c7\1\u02ef\2\u0228\2\0\1\u02ee\6\u0228\2\0"+
    "\1\u0158\2\u02f0\1\u0158\1\u02f1\1\u015b\1\u015c\1\u02f0\2\u0158"+
    "\14\u015b\2\u0158\1\u02f1\3\u015b\2\u0158\1\u02f0\6\u015c\2\u0158"+
    "\15\0\1\254\51\0\1\u02f2\43\0\1\u02f3\55\0\1\u02f4"+
    "\40\0\1\u02d6\2\0\1\u02f5\32\0\1\u01f2\4\0\3\u01f2"+
    "\1\u02f6\10\u01f2\3\0\3\u01f2\37\0\1\u02f7\40\0\1\u02da"+
    "\2\0\1\u02f8\32\0\1\u01bc\4\0\2\u01bc\1\u02f9\11\u01bc"+
    "\3\0\3\u01bc\14\0\2\u02dc\1\0\1\u02dd\2\0\1\u02dc"+
    "\20\0\1\u02dd\5\0\1\u02dc\11\0\2\u02dd\4\0\1\u02dd"+
    "\6\0\1\u02fa\2\0\1\u02fb\1\u02fc\13\0\1\u02dd\15\0"+
    "\1\u01bc\4\0\2\u01bc\1\u02ba\11\u01bc\3\0\3\u01bc\14\0"+
    "\2\100\1\0\1\101\1\102\1\0\1\100\2\0\6\102"+
    "\1\u02fd\5\102\2\0\1\101\3\102\2\0\1\100\11\0"+
    "\2\u020a\1\u0148\2\0\1\u025a\1\u020a\4\0\1\u029e\21\0"+
    "\1\u020a\6\u025a\3\0\2\u0209\1\0\1\u020a\1\u01aa\1\0"+
    "\1\u0209\1\352\1\0\2\u01aa\1\u02fe\2\u01aa\1\u020b\6\u01aa"+
    "\2\0\1\u020a\3\u01aa\2\0\1\u0209\11\0\2\u0209\1\0"+
    "\1\u020a\2\0\1\u0209\1\352\3\0\1\u029e\2\0\1\353"+
    "\10\0\1\u020a\5\0\1\u0209\11\0\2\u0209\1\0\1\u020a"+
    "\1\u01aa\1\0\1\u0209\1\352\1\0\2\u01aa\1\u02fe\1\u01aa"+
    "\1\u025b\1\u020b\6\u01aa\2\0\1\u020a\3\u01aa\2\0\1\u0209"+
    "\11\0\2\u0143\1\0\1\u011b\1\342\1\0\1\u0143\1\352"+
    "\1\0\5\342\1\u0144\1\u02ff\5\342\2\0\1\u011b\3\342"+
    "\2\0\1\u0143\11\0\2\u01ad\1\0\1\u0190\1\u0145\1\0"+
    "\1\u01ad\1\352\1\0\5\u0145\1\u01ae\1\u0300\5\u0145\2\0"+
    "\1\u0190\3\u0145\2\0\1\u01ad\11\0\2\u02e6\1\u0213\1\u0257"+
    "\1\0\1\u0214\1\u02e6\1\352\6\0\1\353\10\0\1\u0257"+
    "\5\0\1\u02e6\1\u0216\3\u0214\1\u0217\1\u0214\2\0\1\u0262"+
    "\2\u025f\1\u0262\1\u0301\1\u0302\1\u0262\1\u0303\1\u0269\1\u0262"+
    "\5\u0302\1\u0304\6\u0302\2\u0262\1\u0301\3\u0302\1\u0262\1\0"+
    "\1\u025f\10\u0262\15\0\1\u0212\32\0\2\350\1\0\1\351"+
    "\1\230\1\0\1\350\1\352\1\0\3\230\1\u0305\1\230"+
    "\1\354\6\230\2\0\1\351\3\230\2\0\1\350\11\0"+
    "\2\u014e\1\0\1\u014f\1\355\1\0\1\u014e\1\352\1\0"+
    "\5\355\1\u0150\1\u0306\5\355\2\0\1\u014f\3\355\2\0"+
    "\1\u014e\21\0\2\u0307\2\0\1\u0307\31\0\5\u0221\1\0"+
    "\4\u0221\14\0\3\u0221\3\0\14\u0221\2\u0225\1\u0221\1\u01c7"+
    "\1\u01c2\2\u0225\2\u0221\14\u01c2\2\u0221\1\u01c7\3\u01c2\2\u0221"+
    "\7\u0225\2\u0221\1\0\2\u02ee\1\u0213\1\u01c7\1\0\1\u0214"+
    "\1\u02ee\1\352\6\0\1\353\10\0\1\u01c7\5\0\1\u02ee"+
    "\1\u0216\3\u0214\1\u0217\1\u0214\2\0\1\u0262\2\u0273\1\u0262"+
    "\1\u0308\2\u0309\1\u030a\1\u0269\1\u0262\5\u0309\1\u030b\6\u0309"+
    "\2\u0262\1\u0308\3\u0309\1\u0262\1\0\1\u0273\6\u0309\2\u0262"+
    "\1\u0158\2\u02f0\1\u0158\1\u02f1\1\u01c2\1\u015c\1\u02f0\2\u0158"+
    "\6\u01c2\1\u01c3\5\u01c2\2\u0158\1\u02f1\3\u01c2\2\u0158\1\u02f0"+
    "\6\u015c\2\u0158\1\0\2\u01c5\2\0\1\u0228\1\u0229\1\u01c5"+
    "\2\0\6\u0228\1\u030c\5\u0228\3\0\3\u0228\2\0\1\u01c5"+
    "\6\u0229\22\0\1\u030d\61\0\1\u023f\27\0\1\u030e\46\0"+
    "\1\u02d6\37\0\1\u01f2\4\0\14\u01f2\3\0\2\u01f2\1\u0247"+
    "\27\0\1\u030f\46\0\1\u02da\37\0\1\u01bc\4\0\13\u01bc"+
    "\1\u0310\3\0\3\u01bc\35\0\1\u0311\42\0\1\u0312\46\0"+
    "\1\u0313\31\0\2\100\1\0\1\101\1\102\1\0\1\100"+
    "\2\0\3\102\1\u0314\10\102\2\0\1\101\3\102\2\0"+
    "\1\100\11\0\2\u0209\1\0\1\u020a\1\u01aa\1\0\1\u0209"+
    "\1\352\1\0\5\u01aa\1\u020b\1\u0315\5\u01aa\2\0\1\u020a"+
    "\3\u01aa\2\0\1\u0209\11\0\2\u0143\1\0\1\u011b\1\342"+
    "\1\0\1\u0143\1\352\1\0\3\342\1\u0316\1\342\1\u0144"+
    "\6\342\2\0\1\u011b\3\342\2\0\1\u0143\11\0\2\u01ad"+
    "\1\0\1\u0190\1\u0145\1\0\1\u01ad\1\352\1\0\5\u0145"+
    "\1\u01ae\1\u0317\5\u0145\2\0\1\u0190\3\u0145\2\0\1\u01ad"+
    "\11\0\2\u0257\1\u0186\2\0\1\u0240\1\u0257\4\0\1\u029e"+
    "\21\0\1\u0257\1\u0294\3\u0240\1\u0295\1\u0240\3\0\2\u025f"+
    "\1\0\1\u0257\1\u0211\1\0\1\u025f\1\352\1\0\2\u0211"+
    "\1\u0318\2\u0211\1\u0260\6\u0211\2\0\1\u0257\3\u0211\2\0"+
    "\1\u025f\11\0\2\u025f\1\0\1\u0257\2\0\1\u025f\1\352"+
    "\3\0\1\u029e\2\0\1\353\10\0\1\u0257\5\0\1\u025f"+
    "\11\0\2\u025f\1\0\1\u0257\1\u0211\1\0\1\u025f\1\352"+
    "\1\0\2\u0211\1\u0318\1\u0211\1\u029d\1\u0260\6\u0211\2\0"+
    "\1\u0257\3\u0211\2\0\1\u025f\11\0\2\u0218\1\u0213\1\351"+
    "\1\230\1\u0214\1\u0218\1\352\1\0\5\230\1\354\6\230"+
    "\2\0\1\351\3\230\2\0\1\u0218\1\u0216\3\u0214\1\u0217"+
    "\1\u0214\3\0\2\u014e\1\0\1\u014f\1\355\1\0\1\u014e"+
    "\1\352\1\0\3\355\1\u0319\1\355\1\u0150\6\355\2\0"+
    "\1\u014f\3\355\2\0\1\u014e\10\0\5\u026d\1\0\4\u026d"+
    "\14\0\3\u026d\3\0\13\u026d\1\0\2\u01c7\2\0\2\u0228"+
    "\1\u01c7\2\0\2\u0228\1\u031a\11\u0228\3\0\3\u0228\2\0"+
    "\1\u01c7\6\u0228\3\0\2\u0273\1\0\1\u01c7\2\u0228\1\u0273"+
    "\1\352\1\0\2\u0228\1\u031a\2\u0228\1\u0274\6\u0228\2\0"+
    "\1\u01c7\3\u0228\2\0\1\u0273\6\u0228\3\0\2\u0273\1\0"+
    "\1\u01c7\2\0\1\u0273\1\352\3\0\1\u029e\2\0\1\353"+
    "\10\0\1\u01c7\5\0\1\u0273\11\0\2\u0273\1\0\1\u01c7"+
    "\2\u0228\1\u0273\1\352\1\0\2\u0228\1\u031a\1\u0228\1\u02a8"+
    "\1\u0274\6\u0228\2\0\1\u01c7\3\u0228\2\0\1\u0273\6\u0228"+
    "\2\0\1\u0221\2\u031b\1\u0221\1\u01c7\1\u0228\1\u031c\1\u031b"+
    "\1\u031d\1\u0221\5\u0228\1\u0274\1\u031e\1\u0228\1\u031f\1\u0228"+
    "\1\u031e\1\u0228\2\u0221\1\u01c7\3\u0228\1\u0224\1\u0221\1\u031b"+
    "\6\u031c\2\u0221\15\0\1\u0166\56\0\1\u0320\46\0\1\u0321"+
    "\26\0\1\u01bc\4\0\3\u01bc\1\u0322\10\u01bc\3\0\3\u01bc"+
    "\37\0\1\u0323\40\0\1\u0313\2\0\1\u0324\26\0\2\u0254"+
    "\1\310\1\101\1\102\1\u011d\1\u0254\2\0\14\102\2\0"+
    "\1\101\3\102\2\0\1\u0254\1\u018a\3\u011d\1\u018b\1\u011d"+
    "\3\0\2\u0209\1\0\1\u020a\1\u01aa\1\0\1\u0209\1\352"+
    "\1\0\5\u01aa\1\u020b\1\u0325\5\u01aa\2\0\1\u020a\3\u01aa"+
    "\2\0\1\u0209\11\0\2\u025c\1\u0213\1\u011b\1\342\1\u0214"+
    "\1\u025c\1\352\1\0\5\342\1\u0144\6\342\2\0\1\u011b"+
    "\3\342\2\0\1\u025c\1\u0216\3\u0214\1\u0217\1\u0214\3\0"+
    "\2\u01ad\1\0\1\u0190\1\u0145\1\0\1\u01ad\1\352\1\0"+
    "\3\u0145\1\u0326\1\u0145\1\u01ae\6\u0145\2\0\1\u0190\3\u0145"+
    "\2\0\1\u01ad\11\0\2\u025f\1\0\1\u0257\1\u0211\1\0"+
    "\1\u025f\1\352\1\0\5\u0211\1\u0260\1\u0327\5\u0211\2\0"+
    "\1\u0257\3\u0211\2\0\1\u025f\11\0\2\u026b\1\u0213\1\u014f"+
    "\1\355\1\u0214\1\u026b\1\352\1\0\5\355\1\u0150\6\355"+
    "\2\0\1\u014f\3\355\2\0\1\u026b\1\u0216\3\u0214\1\u0217"+
    "\1\u0214\3\0\2\u0273\1\0\1\u01c7\2\u0228\1\u0273\1\352"+
    "\1\0\5\u0228\1\u0274\1\u0328\5\u0228\2\0\1\u01c7\3\u0228"+
    "\2\0\1\u0273\6\u0228\3\0\2\u031b\1\0\1\u01c7\2\u01c2"+
    "\1\u031b\1\352\1\0\5\u01c2\1\u0329\6\u01c2\2\0\1\u01c7"+
    "\3\u01c2\2\0\1\u031b\6\u01c2\3\0\2\u031b\1\0\1\u01c7"+
    "\2\u0228\1\u031b\1\352\1\0\5\u0228\1\u0274\6\u0228\2\0"+
    "\1\u01c7\3\u0228\2\0\1\u031b\6\u0228\3\0\2\u031d\2\0"+
    "\2\u01c2\1\u031d\1\352\1\0\5\u01c2\1\u0329\6\u01c2\3\0"+
    "\3\u01c2\2\0\1\u031d\6\u01c2\2\0\1\u0221\2\u031b\1\u0221"+
    "\1\u01c7\1\u0228\1\u031c\1\u031b\1\u031d\1\u0221\5\u0228\1\u0274"+
    "\6\u0228\2\u0221\1\u01c7\3\u0228\1\u0224\1\u0221\1\u031b\6\u031c"+
    "\2\u0221\1\0\2\u0273\1\0\1\u01c7\2\u0228\1\u0273\1\352"+
    "\1\0\5\u0228\1\u0274\6\u0228\2\0\1\u01c7\2\u0228\1\u032a"+
    "\2\0\1\u0273\6\u0228\17\0\1\u032b\46\0\1\u032c\36\0"+
    "\1\u01bc\4\0\14\u01bc\3\0\2\u01bc\1\u02ba\27\0\1\u032d"+
    "\46\0\1\u0313\33\0\2\u0209\1\0\1\u020a\1\u01aa\1\0"+
    "\1\u0209\1\352\1\0\3\u01aa\1\u032e\1\u01aa\1\u020b\6\u01aa"+
    "\2\0\1\u020a\3\u01aa\2\0\1\u0209\11\0\2\u029b\1\u0213"+
    "\1\u0190\1\u0145\1\u0214\1\u029b\1\352\1\0\5\u0145\1\u01ae"+
    "\6\u0145\2\0\1\u0190\3\u0145\2\0\1\u029b\1\u0216\3\u0214"+
    "\1\u0217\1\u0214\3\0\2\u025f\1\0\1\u0257\1\u0211\1\0"+
    "\1\u025f\1\352\1\0\5\u0211\1\u0260\1\u032f\5\u0211\2\0"+
    "\1\u0257\3\u0211\2\0\1\u025f\11\0\2\u0273\1\0\1\u01c7"+
    "\2\u0228\1\u0273\1\352\1\0\5\u0228\1\u0274\1\u0330\5\u0228"+
    "\2\0\1\u01c7\3\u0228\2\0\1\u0273\6\u0228\3\0\2\u01c6"+
    "\1\0\1\u01c7\2\u01c2\1\u01c6\2\0\4\u01c2\1\u0331\7\u01c2"+
    "\2\0\1\u01c7\3\u01c2\2\0\1\u01c6\6\u01c2\2\0\1\u0221"+
    "\2\u031b\1\u0221\1\u01c7\1\u0228\1\u031c\1\u031b\1\u031d\1\u0221"+
    "\4\u0228\1\u0332\1\u0274\6\u0228\2\u0221\1\u01c7\3\u0228\1\u0224"+
    "\1\u0221\1\u031b\6\u031c\2\u0221\33\0\1\u02d6\46\0\1\u02da"+
    "\40\0\1\u0333\22\0\2\u02c0\1\u0213\1\u020a\1\u01aa\1\u0214"+
    "\1\u02c0\1\352\1\0\5\u01aa\1\u020b\6\u01aa\2\0\1\u020a"+
    "\3\u01aa\2\0\1\u02c0\1\u0216\3\u0214\1\u0217\1\u0214\3\0"+
    "\2\u025f\1\0\1\u0257\1\u0211\1\0\1\u025f\1\352\1\0"+
    "\3\u0211\1\u0334\1\u0211\1\u0260\6\u0211\2\0\1\u0257\3\u0211"+
    "\2\0\1\u025f\11\0\2\u0273\1\0\1\u01c7\2\u0228\1\u0273"+
    "\1\352\1\0\3\u0228\1\u0335\1\u0228\1\u0274\6\u0228\2\0"+
    "\1\u01c7\3\u0228\2\0\1\u0273\6\u0228\3\0\2\u01c6\1\0"+
    "\1\u01c7\2\u01c2\1\u01c6\2\0\1\u01c2\1\u0336\12\u01c2\2\0"+
    "\1\u01c7\1\u0336\2\u01c2\2\0\1\u01c6\6\u01c2\3\0\2\u0273"+
    "\1\0\1\u01c7\2\u0228\1\u0273\1\352\1\0\5\u0228\1\u0274"+
    "\4\u0228\1\u0337\1\u0228\2\0\1\u01c7\3\u0228\2\0\1\u0273"+
    "\6\u0228\17\0\1\u0338\32\0\2\u02e6\1\u0213\1\u0257\1\u0211"+
    "\1\u0214\1\u02e6\1\352\1\0\5\u0211\1\u0260\6\u0211\2\0"+
    "\1\u0257\3\u0211\2\0\1\u02e6\1\u0216\3\u0214\1\u0217\1\u0214"+
    "\3\0\2\u02ee\1\u0213\1\u01c7\2\u0228\1\u02ee\1\352\1\0"+
    "\5\u0228\1\u0274\6\u0228\2\0\1\u01c7\3\u0228\2\0\1\u02ee"+
    "\6\u0228\3\0\2\u0339\1\u0213\1\u01c7\1\u01c2\1\u033a\1\u0339"+
    "\2\0\1\u01c2\1\u033b\12\u01c2\2\0\1\u01c7\1\u033b\2\u01c2"+
    "\2\0\1\u0339\1\u033c\3\u033a\1\u033d\1\u033a\3\0\2\u0273"+
    "\1\0\1\u01c7\2\u0228\1\u0273\1\352\1\u02ec\1\u033e\2\u0228"+
    "\1\u033e\1\u0228\1\u0274\6\u0228\2\0\1\u01c7\3\u0228\2\0"+
    "\1\u0273\6\u0228\35\0\1\u0313\14\0\2\u0339\1\u0213\1\u01c7"+
    "\1\0\1\u0214\1\u0339\20\0\1\u01c7\5\0\1\u0339\1\u0216"+
    "\3\u0214\1\u0217\1\u0214\3\0\2\u01c6\1\0\1\u01c7\1\u01c2"+
    "\1\u033f\1\u01c6\2\0\14\u01c2\2\0\1\u01c7\3\u01c2\2\0"+
    "\1\u01c6\6\u033f\2\0\1\u0262\2\u01c6\1\u0262\1\u0308\2\u0340"+
    "\1\u0341\2\u0262\14\u0340\2\u0262\1\u0308\3\u0340\1\u0262\1\0"+
    "\1\u01c6\6\u0340\2\u0262\1\0\2\u01c6\1\0\1\u01c7\1\u01c2"+
    "\1\u033f\1\u01c6\2\0\14\u01c2\2\0\1\u01c7\3\u01c2\2\0"+
    "\1\u01c6\1\u033f\1\u0342\1\u033f\1\u0343\2\u033f\3\0\2\u01c6"+
    "\1\0\1\u01c7\1\u01c2\1\u033f\1\u01c6\2\0\14\u01c2\2\0"+
    "\1\u01c7\3\u01c2\2\0\1\u01c6\5\u033f\1\u0344\2\0\1\u0221"+
    "\2\u031b\1\u0221\1\u01c7\1\u0228\1\u031c\1\u031b\1\u031d\1\u0221"+
    "\5\u0228\1\u0274\6\u0228\2\u0221\1\u01c7\3\u0228\2\u0221\1\u031b"+
    "\6\u031c\2\u0221\1\0\2\u01c6\1\0\1\u01c7\2\u01c2\1\u01c6"+
    "\2\0\2\u01c2\1\u0345\11\u01c2\2\0\1\u01c7\3\u01c2\2\0"+
    "\1\u01c6\6\u01c2\3\0\2\u01c6\1\0\1\u01c7\2\0\1\u01c6"+
    "\4\0\1\u029e\13\0\1\u01c7\5\0\1\u01c6\11\0\2\u01c6"+
    "\1\0\1\u01c7\2\u01c2\1\u01c6\2\0\14\u01c2\2\0\1\u01c7"+
    "\3\u01c2\2\0\1\u01c6\1\u01c2\3\u033a\2\u01c2\3\0\2\u01c6"+
    "\1\0\1\u01c7\1\u01c2\1\u033a\1\u01c6\2\0\14\u01c2\2\0"+
    "\1\u01c7\3\u01c2\2\0\1\u01c6\6\u033a\3\0\2\u01c6\1\0"+
    "\1\u01c7\2\u01c2\1\u01c6\2\0\14\u01c2\2\0\1\u01c7\3\u01c2"+
    "\2\0\1\u01c6\1\u033a\4\u01c2\1\u033a\3\0\2\u01c6\1\0"+
    "\1\u01c7\2\u01c2\1\u01c6\2\0\6\u01c2\1\u0346\5\u01c2\2\0"+
    "\1\u01c7\3\u01c2\2\0\1\u01c6\6\u01c2\3\0\2\u01c6\1\0"+
    "\1\u01c7\2\u01c2\1\u01c6\2\0\6\u01c2\1\u0347\5\u01c2\2\0"+
    "\1\u01c7\3\u01c2\2\0\1\u01c6\6\u01c2\3\0\2\u01c6\1\0"+
    "\1\u01c7\2\u01c2\1\u01c6\2\0\3\u01c2\1\u0348\10\u01c2\2\0"+
    "\1\u01c7\3\u01c2\2\0\1\u01c6\6\u01c2\3\0\2\u0339\1\u0213"+
    "\1\u01c7\1\u01c2\1\u033a\1\u0339\2\0\14\u01c2\2\0\1\u01c7"+
    "\3\u01c2\2\0\1\u0339\1\u033c\3\u033a\1\u033d\1\u033a\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[30225];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\10\0\14\1\1\11\1\1\1\11\1\1\1\11\3\1"+
    "\1\11\3\1\1\11\1\1\1\11\4\1\1\11\5\1"+
    "\1\11\4\1\43\0\2\1\77\0\2\1\11\0\2\1"+
    "\25\0\2\1\13\0\1\1\2\0\1\1\12\0\3\1"+
    "\1\0\3\1\6\0\2\1\11\0\2\1\10\0\1\1"+
    "\1\11\1\0\1\11\1\1\1\0\1\1\5\0\1\1"+
    "\1\0\5\1\27\0\10\1\6\0\1\1\2\0\3\1"+
    "\2\0\1\1\2\0\5\1\6\0\2\1\7\0\1\1"+
    "\2\0\1\1\2\0\4\1\11\0\4\1\14\0\1\1"+
    "\1\11\4\0\3\1\14\0\1\1\6\0\1\11\1\1"+
    "\5\0\1\1\1\0\3\1\2\0\1\1\5\0\1\1"+
    "\1\0\1\1\7\0\1\1\1\0\1\1\1\0\1\1"+
    "\3\0\1\11\3\1\1\0\6\1\3\0\1\1\30\0"+
    "\1\11\7\1\7\0\1\11\16\1\6\0\7\1\3\0"+
    "\1\1\3\0\1\1\2\0\2\1\1\0\1\1\7\0"+
    "\6\1\1\0\1\1\7\0\2\1\4\0\4\1\2\0"+
    "\1\11\3\0\5\1\1\0\12\1\1\11\1\0\2\1"+
    "\3\0\1\1\1\0\3\1\6\0\2\1\1\0\2\1"+
    "\1\0\1\1\1\11\1\0\3\1\1\0\1\1\2\0"+
    "\1\1\1\0\1\1\7\0\1\1\3\0\1\11\13\0"+
    "\1\1\2\0\1\1\4\0\4\1\4\0\3\1\1\0"+
    "\1\1\1\0\1\1\1\0\2\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\2\0\1\1\12\0"+
    "\1\1\4\0\3\1\1\11\1\0\3\1\1\0\2\1"+
    "\1\0\1\1\1\0\2\1\1\0\2\1\3\0\1\1"+
    "\2\0\1\11\3\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\11\1\1\2\0\1\1\2\0\1\1\1\0\3\1"+
    "\1\0\1\1\1\0\2\1\4\0\1\1\6\0\1\1"+
    "\2\0\1\1\4\0\3\1\1\0\1\1\1\0\3\1"+
    "\2\0\1\1\1\0\2\1\3\0\1\1\1\0\1\1"+
    "\1\11\1\0\6\1\1\0\1\1\1\0\2\1\2\0"+
    "\1\1\2\0\4\1\1\0\1\1\3\0\3\1\1\0"+
    "\1\1\1\0\2\1\1\0\1\1\6\0\2\1\2\0"+
    "\3\1\4\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[840];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
	
	static final private Pattern ints = Pattern.compile("\\d+");

	private String openTag = "<font color=\"magenta\"><LK:NUMDOC";  
	private String closeTag = "</LK:NUMDOC></font>"; 
		
	private StringBuilder output = new StringBuilder();

	int offset = 0;
	
	String anno = "";
	String numero = ""; 
	String mixedValue = ""; 
	
	public String getOutput() {
		return output.toString();
	}
	
	private String getNumber(String text) {
		
		return getNumber(text, true, false);
	}
	
	private String getNumber(String text, boolean first, boolean second) {
		
		Matcher matcher = ints.matcher(text);
		
		if( matcher.find() && first ) {
			return text.substring(matcher.start(), matcher.end());
		}

		if( matcher.find() && second ) {
			return text.substring(matcher.start(), matcher.end());
		}

		return "";
	}

	private String getLastNumber(String text) {
		
		Matcher matcher = ints.matcher(text);
		
		String out = "";
		
		while( matcher.find() ) {
			out = text.substring(matcher.start(), matcher.end());
		}
		
		return out;
	}

	private String getBeforeLastNumber(String text) {
		
		Matcher matcher = ints.matcher(text);
		
		String out = "";
		String last = "";
		
		while( matcher.find() ) {
			out = last;
			last = text.substring(matcher.start(), matcher.end());
		}
		
		return out;
	}

	private String normAnno(String aa) {
		
		if(aa.length() == 2) {
			int num = -1;
			try {
				num = Integer.valueOf(aa);
			} catch (NumberFormatException e) {
				return "-ERROR-";
			}			
			if(num > 19) { aa = "19" + aa; } else { aa = "20" + aa;	}		
		}
		return aa;
	}

	private void readAnno(String text, boolean partizione) {
	
		anno = "";
		
		if(partizione) {
			anno = " anno=\"" + normAnno(getBeforeLastNumber(text)) + "\"";
		} else {			
			anno = " anno=\"" + normAnno(getLastNumber(text)) + "\"";
		}
	}

	private String numero(String text) {
		
		String value = " value=\"" + getNumber(text) + "\">";
		//System.out.println("numero() - tex:\"" + text + "\" - val:\"" + value + "\"");
		String out = openTag + anno + value + text + closeTag;
		
		return out;
	}

	private String numeroAnno(String text) {
		
		String anno = " anno=\"" + normAnno(getNumber(text, false, true)) + "\"";
		String value = " value=\"" + getNumber(text) + "\">";
		String out = openTag + anno + value + text + closeTag;
		
		return out;
	}
	
	private String annoNumero(String text) {
		
		String anno = " anno=\"" + normAnno(getNumber(text)) + "\"";
		String value = " value=\"" + getNumber(text, false, true) + "\">";
		String out = openTag + anno + value + text + closeTag;
		
		return out;
	}
	
	/* Da togliere in futuro e trattare singolarmente i casi specifici per estrarre l'anno */
	private String mixedNumero() {
		
		String value = " value=\"" + getNumber(mixedValue) + "\" mixed=\"" + mixedValue + "\">";
		
		String out = openTag + anno + value + numero + closeTag;
		
		return out;	
	}

	/* Da togliere in futuro e trattare singolarmente i casi specifici per estrarre l'anno */
	private String mixedNumero(String text) {
		
		//String mixedValue = yytext().replaceAll(" ", "").replaceAll("/", "-").toLowerCase();
		String mixedValue = normMixedValue(yytext());
		
		String value = " value=\"" + getNumber(mixedValue) + "\" mixed=\"" + mixedValue + "\">";
		
		String out = openTag + anno + value + text + closeTag;
		
		return out;	
	}
	

	private String mixedAnnoNumero(String text) {
		
		String anno = " anno=\"" + normAnno(getNumber(text)) + "\"";
		
		//String mixedValue = yytext().replaceAll(" ", "").replaceAll("/", "-").toLowerCase();
		String mixedValue = normMixedValue(yytext());
		
		String value = " value=\"" + getNumber(mixedValue, false, true) + "\" mixed=\"" + mixedValue + "\">";

		String out = openTag + anno + value + text + closeTag;
		
		return out;	
	}

	private String mixedNumeroAnno(String text) {
		
		String anno = " anno=\"" + normAnno(getNumber(text, false, true)) + "\"";
		
		//String mixedValue = yytext().replaceAll(" ", "").replaceAll("/", "-").toLowerCase();
		String mixedValue = normMixedValue(yytext());
		
		String value = " value=\"" + getNumber(mixedValue) + "\" mixed=\"" + mixedValue + "\">";

		String out = openTag + anno + value + text + closeTag;
		
		return out;	
	}

	private String normMixedValue(String text) {
	
		String mixedValue = text.toLowerCase().replaceAll("–", "-").replaceAll("—", "-").replaceAll("_", "-");
		
		mixedValue = text.replaceAll(" ", "").replaceAll("/", "-");
				
		return mixedValue;
	}


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Numeri(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 236) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

    // numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 1: 
          { output.append(yytext());
          }
        case 33: break;
        case 2: 
          { System.out.print(yytext());
          }
        case 34: break;
        case 3: 
          { 
          }
        case 35: break;
        case 4: 
          { offset++;
			
			if( offset >= numero.length() ) {
				
				offset = 0;
				numero = "";

				yypushback(1);
				yybegin(YYINITIAL);
			}
			
			output.append(yytext());
          }
        case 36: break;
        case 5: 
          { offset += yylength();
				output.append( numero(yytext()) );
          }
        case 37: break;
        case 6: 
          { offset++;
				
				if( offset >= numero.length() ) {
					
					offset = 0;
					numero = "";
					anno = "";
	
					yypushback(1);
					yybegin(YYINITIAL);
				}
				
				output.append(yytext());
          }
        case 38: break;
        case 7: 
          { offset++;
			
			if( offset >= numero.length() ) {
				
				output.append( mixedNumero() );

				offset = 0;
				numero = "";
				anno = "";
				mixedValue = "";
				
				yypushback(1);
				yybegin(YYINITIAL);
			}
          }
        case 39: break;
        case 8: 
          { offset++;
			
			if( offset >= numero.length() ) {
				
				offset = 0;
				numero = "";
				anno = "";
				
				yypushback(1);
				yybegin(YYINITIAL);
			}
          }
        case 40: break;
        case 9: 
          { offset++;
			
			if( offset >= numero.length() ) {
				
				//output.append( mixedNumero() );

				offset = 0;
				numero = "";
				anno = "";
				mixedValue = "";
				
				yypushback(1);
				yybegin(YYINITIAL);
			}
          }
        case 41: break;
        case 10: 
          { offset += yylength();
				output.append(yytext().substring(0,1) + numero(yytext().substring(1)));
          }
        case 42: break;
        case 11: 
          { numero = yytext();
																	anno = "";
																	mixedValue = "";
																	yypushback(yylength());
																	offset = 0;
																	yybegin(sMixed);
          }
        case 43: break;
        case 12: 
          { output.append(yytext()); yybegin(AH);
          }
        case 44: break;
        case 13: 
          { output.append(yytext()); yybegin(LK);
          }
        case 45: break;
        case 14: 
          { offset += yylength();
									mixedValue = yytext().replaceAll(" ", "").replaceAll("/", "-").toLowerCase();
          }
        case 46: break;
        case 15: 
          { output.append(yytext().substring(0,1) + mixedNumero(yytext().substring(1)));
          }
        case 47: break;
        case 16: 
          { numero = yytext();
					anno = "";
					yypushback(yylength());
					offset = 0;
					yybegin(sListaSenzaAnno);
          }
        case 48: break;
        case 17: 
          { output.append(yytext()); yybegin(YYINITIAL);
          }
        case 49: break;
        case 18: 
          { offset += yylength();
						output.append(yytext().substring(0,1) + numero(yytext().substring(1)));
          }
        case 50: break;
        case 19: 
          { offset += yylength();
												output.append( numero(yytext()) );
          }
        case 51: break;
        case 20: 
          { numero = yytext();
									readAnno(yytext(), false);
									yypushback(yylength());
									offset = 0;
									yybegin(sListaConAnno);
          }
        case 52: break;
        case 21: 
          { output.append(yytext().substring(0,1) + annoNumero(yytext().substring(1)));
          }
        case 53: break;
        case 22: 
          { offset += yylength();
													output.append(yytext().substring(0,1) + numero(yytext().substring(1)));
          }
        case 54: break;
        case 23: 
          { anno = " anno=\"" + normAnno(getNumber(yytext())) + "\"";
						offset += yylength();
          }
        case 55: break;
        case 24: 
          { numero = yytext();
																	anno = "";
																	mixedValue = "";
																	yypushback(yylength());
																	offset = 0;
																	yybegin(sMixedAnno);
          }
        case 56: break;
        case 25: 
          { output.append( annoNumero(yytext()) );
          }
        case 57: break;
        case 26: 
          { offset += yylength();
									output.append(mixedNumeroAnno(yytext()));
          }
        case 58: break;
        case 27: 
          { offset += yylength();
									output.append(mixedAnnoNumero(yytext()));
          }
        case 59: break;
        case 28: 
          { output.append(yytext().substring(0,1) + mixedNumeroAnno(yytext().substring(1)));
          }
        case 60: break;
        case 29: 
          { output.append(yytext().substring(0,1) + mixedAnnoNumero(yytext().substring(1)));
          }
        case 61: break;
        case 30: 
          { offset += yylength();
															output.append(yytext().substring(0,1) + numero(yytext().substring(1)));
          }
        case 62: break;
        case 31: 
          { offset += yylength();
						output.append(mixedAnnoNumero(yytext()));
						//mixedValue = yytext().replaceAll(" ", "").replaceAll("/", "-").toLowerCase();
						//anno = " anno=\"" + normAnno(getNumber(yytext())) + "\"";
          }
        case 63: break;
        case 32: 
          { /* output.append( mixedAnnoNumero(yytext()) ); */

					numero = yytext();
					anno = "";
					mixedValue = "";
					yypushback(yylength());
					offset = 0;
					yybegin(sMixedEu);
          }
        case 64: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return YYEOF;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Numeri [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        Numeri scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new Numeri(reader);
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
